import{_ as r,W as d,X as k,Y as n,Z as s,$ as a,a1 as e,a0 as o,C as u}from"./framework-0d71bc9d.js";const v="/blog/assets/getBoundingClientRect-ee22a4c2.png",m="/blog/assets/intersectionObserver-c592800b.gif",b={},g=n("h1",{id:"图片懒加载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#图片懒加载","aria-hidden":"true"},"#"),s(" 图片懒加载")],-1),h=n("h2",{id:"优点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#优点","aria-hidden":"true"},"#"),s(" 优点")],-1),f={href:"https://wp-rocket.me/blog/lazyloading/#section-2",target:"_blank",rel:"noopener noreferrer"},y=o('<ul><li>减少网页加载时间</li><li>减少浏览器的工作</li><li>减少首页的 HTTP 请求数量</li><li>减少服务器或 CDN 的压力</li><li>减少带宽</li></ul><h2 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h2><ul><li>scroll event</li><li>intersection observer api</li><li><code>loading</code> attribute of <code>img</code> element</li><li>libraries</li></ul><h2 id="scroll" tabindex="-1"><a class="header-anchor" href="#scroll" aria-hidden="true">#</a> Scroll</h2><h3 id="前置知识" tabindex="-1"><a class="header-anchor" href="#前置知识" aria-hidden="true">#</a> 前置知识</h3><p><em>getBoundingClientRect API</em></p>',6),_={href:"https://javascript.info/coordinates#element-coordinates-getboundingclientrect",target:"_blank",rel:"noopener noreferrer"},w=o('<ul><li><code>getBoundingClientRect</code> 返回一个包含了该元素的一系列信息的对象。我们从这个对象中可以获取到该元素的位置信息，如下图所示，通过 <code>x</code>/<code>left</code> 属性可以获取到视口左边到元素左边的距离；通过 <code>y</code>/<code>top</code> 属性可以获取到视口顶边到元素顶边的距离。注意：<code>x</code>、<code>y</code>、<code>top</code>、<code>left</code> 都是相对于视口，不是相对于整个文档。如果 <code>top &lt;= 0</code>，说明元素的顶边在视口顶边的上方或与视口顶边重合，此时无法看见元素的顶边。如果 <code>top &gt; 0</code>，说明元素的顶边在视口中或视口的下方，此时可能可以看到元素的顶边。</li></ul><figure><img src="'+v+'" alt="getBoundingClientRect API" height="350" tabindex="0" loading="lazy"><figcaption>getBoundingClientRect API</figcaption></figure><p><em>window.innerHeight</em></p>',3),q={href:"https://javascript.info/size-and-scroll-window#width-height-of-the-window",target:"_blank",rel:"noopener noreferrer"},I=n("ul",null,[n("li",null,[s("使用 "),n("code",null,"window.innerHeight"),s(" 可以获取视口的高度。")])],-1),x=n("p",null,[n("em",null,"dataset")],-1),z={href:"https://javascript.info/dom-attributes-and-properties#non-standard-attributes-dataset",target:"_blank",rel:"noopener noreferrer"},j=o(`<ul><li><code>&lt;div class=&quot;test&quot;&gt;&lt;/div&gt;</code> 中的 <code>class</code> 是标准的属性。开发者可以使用 <code>data-属性名</code> 的格式定义非标准的属性，并通过 <code>dataset</code> 可以获取非标准属性和对应值：</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- name 是非标准属性 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>eathyn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// eathyn</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h3>`,3),S={href:"https://javascript.info/onscroll#load-visible-images",target:"_blank",rel:"noopener noreferrer"},A=o(`<p>使用 <code>getBoundingClientRect</code> 获取元素的位置信息；使用 <code>window.innerHeight</code> 获取视口高度。对比元素位置信息和视口高度判断出元素的顶边或底边是否出现在视口中。如果元素出现在视口中，则将图片的地址从 <code>dataset</code> 中取出，赋值给 <code>src</code> 属性，就可以加载图片了。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>placeholder.svg<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://en.js.cx/clipart/solar/planets.jpg<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>640<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>360<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 判断图片是否进入视口</span>
<span class="token keyword">function</span> <span class="token function">isVisible</span><span class="token punctuation">(</span><span class="token parameter">elem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> coords <span class="token operator">=</span> elem<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// 视口高度</span>
  <span class="token keyword">const</span> windowHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight
  <span class="token comment">// 图片的顶边在视图中</span>
  <span class="token keyword">const</span> isTopVisible <span class="token operator">=</span> coords<span class="token punctuation">.</span>top <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> coords<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> windowHeight
  <span class="token comment">// 图片的底边在视图中</span>
  <span class="token keyword">const</span> isBottomVisible <span class="token operator">=</span> coords<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> coords<span class="token punctuation">.</span>bottom <span class="token operator">&lt;</span> windowHeight
  <span class="token keyword">return</span> isTopVisible <span class="token operator">||</span> isBottomVisible
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> lazyImages <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;img[data-src]&#39;</span><span class="token punctuation">)</span>
  lazyImages<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">lazyImage</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 图片进入视口，加载图片</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isVisible</span><span class="token punctuation">(</span>lazyImage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> realSrc <span class="token operator">=</span> lazyImage<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src
      lazyImage<span class="token punctuation">.</span>src <span class="token operator">=</span> realSrc
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 处理页面加载后图片的顶边或底边就出现在视口中的情况</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> loadImage<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优化-1-避免重复执行" tabindex="-1"><a class="header-anchor" href="#优化-1-避免重复执行" aria-hidden="true">#</a> 优化-1 避免重复执行</h3><p><code>loadImage</code> 可以进行优化。当已下载过的图片重新进入视口时，<code>isVisible</code> 返回 <code>true</code>，此时会重新从 <code>dataset</code> 中获取图片的地址然后赋值给 <code>src</code>。虽然不会重新触发 HTTP 请求获取图片，但是这两条语句的执行是没必要的，因为图片在第一次进入视口时已经加载好了。我的解决方案是图片第一次完成下载后就将 <code>dataset.src</code> 设置为空字符串，下一次图片进入视口时判断 <code>dataset.src</code> 是否为空，如果是空，则跳过。代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> lazyImages <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;img[data-src]&#39;</span><span class="token punctuation">)</span>
  lazyImages<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">lazyImage</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> realSrc <span class="token operator">=</span> lazyImage<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src
    <span class="token comment">// 避免重复执行</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>realSrc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 图片进入视口，加载图片</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isVisible</span><span class="token punctuation">(</span>lazyImage<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      lazyImage<span class="token punctuation">.</span>src <span class="token operator">=</span> realSrc
      <span class="token comment">// 图片第一次加载成功后，将 \`dataset.src\` 设置为空字符串</span>
      lazyImage<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优化-2-减小事件频率" tabindex="-1"><a class="header-anchor" href="#优化-2-减小事件频率" aria-hidden="true">#</a> 优化-2 减小事件频率</h3><p><code>scroll</code> 事件的触发频率非常高，因此 <code>loadImage</code> 函数也会被调用很多次。另外，<code>loadImage</code> 中存在 <code>forEach</code> 循环，所以最终占用的计算资源会比较高。我的解决方案是降低 <code>scroll</code> 事件的触发频率，也就是使用节流。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 使用 lodash 中的 throttle 函数</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> _<span class="token punctuation">.</span><span class="token function">throttle</span><span class="token punctuation">(</span>loadImage<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="完整代码" tabindex="-1"><a class="header-anchor" href="#完整代码" aria-hidden="true">#</a> 完整代码</h3>`,10),R={href:"https://github.com/Eathyn/lazy-load-image-solutions/tree/main/scroll-event",target:"_blank",rel:"noopener noreferrer"},L=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("img")]),s(`
  `),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("placeholder.svg"),n("span",{class:"token punctuation"},'"')]),s(`
  `),n("span",{class:"token attr-name"},"data-src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("https://en.js.cx/clipart/solar/planets.jpg"),n("span",{class:"token punctuation"},'"')]),s(`
  `),n("span",{class:"token attr-name"},"width"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("640"),n("span",{class:"token punctuation"},'"')]),s(`
  `),n("span",{class:"token attr-name"},"height"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("360"),n("span",{class:"token punctuation"},'"')]),s(`
  `),n("span",{class:"token attr-name"},"alt"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token punctuation"},'"')]),s(`
`),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 判断图片是否进入视口"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"isVisible"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"elem"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" coords "),n("span",{class:"token operator"},"="),s(" elem"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getBoundingClientRect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token comment"},"// 视口高度"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" windowHeight "),n("span",{class:"token operator"},"="),s(" window"),n("span",{class:"token punctuation"},"."),s(`innerHeight
  `),n("span",{class:"token comment"},"// 图片的顶边在视图中"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" isTopVisible "),n("span",{class:"token operator"},"="),s(" coords"),n("span",{class:"token punctuation"},"."),s("top "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"&&"),s(" coords"),n("span",{class:"token punctuation"},"."),s("top "),n("span",{class:"token operator"},"<"),s(` windowHeight
  `),n("span",{class:"token comment"},"// 图片的底边在视图中"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" isBottomVisible "),n("span",{class:"token operator"},"="),s(" coords"),n("span",{class:"token punctuation"},"."),s("bottom "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"&&"),s(" coords"),n("span",{class:"token punctuation"},"."),s("bottom "),n("span",{class:"token operator"},"<"),s(` windowHeight
  `),n("span",{class:"token keyword"},"return"),s(" isTopVisible "),n("span",{class:"token operator"},"||"),s(` isBottomVisible
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"loadImage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" lazyImages "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"querySelectorAll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'img[data-src]'"),n("span",{class:"token punctuation"},")"),s(`
  lazyImages`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"lazyImage"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" realSrc "),n("span",{class:"token operator"},"="),s(" lazyImage"),n("span",{class:"token punctuation"},"."),s("dataset"),n("span",{class:"token punctuation"},"."),s(`src
    `),n("span",{class:"token comment"},"// 避免重复执行"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("realSrc"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"return"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token comment"},"// 图片进入视口，加载图片"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"isVisible"),n("span",{class:"token punctuation"},"("),s("lazyImage"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      lazyImage`),n("span",{class:"token punctuation"},"."),s("src "),n("span",{class:"token operator"},"="),s(` realSrc
      `),n("span",{class:"token comment"},"// 图片第一次加载成功后，将 `dataset.src` 设置为空字符串"),s(`
      lazyImage`),n("span",{class:"token punctuation"},"."),s("dataset"),n("span",{class:"token punctuation"},"."),s("src "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"''"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token function"},"loadImage"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
window`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEventListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'scroll'"),n("span",{class:"token punctuation"},","),s(" _"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"throttle"),n("span",{class:"token punctuation"},"("),s("loadImage"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"200"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("h2",{id:"intersection-observer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#intersection-observer","aria-hidden":"true"},"#"),s(" Intersection Observer")],-1),V=n("h3",{id:"前置知识-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前置知识-1","aria-hidden":"true"},"#"),s(" 前置知识")],-1),H=n("p",null,[n("em",null,"IntersectionObserver API")],-1),O={href:"https://blog.webdevsimplified.com/2022-01/intersection-observer/",target:"_blank",rel:"noopener noreferrer"},B=n("p",null,[n("code",null,"IntersectionObserver"),s(" 可以监听元素是否进入视口。代码如下：当元素进入视口后，在控制台打印 "),n("code",null,"item entered the viewport"),s("。")],-1),T=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("item"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-css line-numbers-mode","data-ext":"css"},[n("pre",{class:"language-css"},[n("code",null,[n("span",{class:"token selector"},".item"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token property"},"width"),n("span",{class:"token punctuation"},":"),s(" 100px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"height"),n("span",{class:"token punctuation"},":"),s(" 100px"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"background-color"),n("span",{class:"token punctuation"},":"),s(" indianred"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"position"),n("span",{class:"token punctuation"},":"),s(" absolute"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token property"},"top"),n("span",{class:"token punctuation"},":"),s(" 800px"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),M=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" item "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"querySelector"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'.item'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"const"),s(" observer "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"IntersectionObserver"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"entries"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  entries`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"entry"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("entry"),n("span",{class:"token punctuation"},"."),s("isIntersecting"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'item entered the viewport'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
observer`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"observe"),n("span",{class:"token punctuation"},"("),s("item"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),N=o('<figure><img src="'+m+`" alt="intersectionObserver API" height="400" tabindex="0" loading="lazy"><figcaption>intersectionObserver API</figcaption></figure><h3 id="原理-1" tabindex="-1"><a class="header-anchor" href="#原理-1" aria-hidden="true">#</a> 原理</h3><p>使用 <code>intersectionObserver</code> 监视图片是否进入视口。图片进入视口后，通过 <code>dataset.src</code> 获取图片的 URL 并加载图片。代码如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>placeholder.svg<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://en.js.cx/clipart/solar/saturn.jpg<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>805<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>390<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">entries</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 图片进入视口</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 加载图片</span>
          <span class="token keyword">const</span> lazyImage <span class="token operator">=</span> entry<span class="token punctuation">.</span>target
          lazyImage<span class="token punctuation">.</span>src <span class="token operator">=</span> lazyImage<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">const</span> images <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;img[data-src]&#39;</span><span class="token punctuation">)</span>
  images<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">image</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="优化-1-避免重复执行-1" tabindex="-1"><a class="header-anchor" href="#优化-1-避免重复执行-1" aria-hidden="true">#</a> 优化-1 避免重复执行</h3><p>已加载的图片重新进入视口时，没有必要执行如下的代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> lazyImage <span class="token operator">=</span> entry<span class="token punctuation">.</span>target
lazyImage<span class="token punctuation">.</span>src <span class="token operator">=</span> lazyImage<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>因为图片第一次进入视口时就已经加载好图片了。<code>IntersectionObserver</code> 提供了 <code>unobserve</code> 方法，用于取消监视元素。我们可以利用这个方法，当图片进入视口并加载完图片后，取消监视这个图片元素。那么这个图片元素重新进入视口时就不会调用 <code>IntersectionObserver</code> 的回调函数。代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntersectionObserver</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">entries<span class="token punctuation">,</span> observer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">entry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 图片进入视口</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>entry<span class="token punctuation">.</span>isIntersecting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 加载图片</span>
        <span class="token keyword">const</span> lazyImage <span class="token operator">=</span> entry<span class="token punctuation">.</span>target
        lazyImage<span class="token punctuation">.</span>src <span class="token operator">=</span> lazyImage<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>src
        <span class="token comment">// 避免重复执行</span>
        observer<span class="token punctuation">.</span><span class="token function">unobserve</span><span class="token punctuation">(</span>lazyImage<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="完整代码-1" tabindex="-1"><a class="header-anchor" href="#完整代码-1" aria-hidden="true">#</a> 完整代码</h3>`,10),U={href:"https://github.com/Eathyn/lazy-load-image-solutions/tree/main/intersection-observer-api",target:"_blank",rel:"noopener noreferrer"},D=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("img")]),s(`
  `),n("span",{class:"token attr-name"},"src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("placeholder.svg"),n("span",{class:"token punctuation"},'"')]),s(`
  `),n("span",{class:"token attr-name"},"data-src"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("https://en.js.cx/clipart/solar/saturn.jpg"),n("span",{class:"token punctuation"},'"')]),s(`
  `),n("span",{class:"token attr-name"},"width"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("805"),n("span",{class:"token punctuation"},'"')]),s(`
  `),n("span",{class:"token attr-name"},"height"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("390"),n("span",{class:"token punctuation"},'"')]),s(`
  `),n("span",{class:"token attr-name"},"alt"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token punctuation"},'"')]),s(`
`),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(" observer "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"IntersectionObserver"),n("span",{class:"token punctuation"},"("),s(`
  `),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("entries"),n("span",{class:"token punctuation"},","),s(" observer")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    entries`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"entry"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 图片进入视口"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("entry"),n("span",{class:"token punctuation"},"."),s("isIntersecting"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 加载图片"),s(`
        `),n("span",{class:"token keyword"},"const"),s(" lazyImage "),n("span",{class:"token operator"},"="),s(" entry"),n("span",{class:"token punctuation"},"."),s(`target
        lazyImage`),n("span",{class:"token punctuation"},"."),s("src "),n("span",{class:"token operator"},"="),s(" lazyImage"),n("span",{class:"token punctuation"},"."),s("dataset"),n("span",{class:"token punctuation"},"."),s(`src
        `),n("span",{class:"token comment"},"// 避免重复执行"),s(`
        observer`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unobserve"),n("span",{class:"token punctuation"},"("),s("lazyImage"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token keyword"},"const"),s(" images "),n("span",{class:"token operator"},"="),s(" document"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"querySelectorAll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'img[data-src]'"),n("span",{class:"token punctuation"},")"),s(`
images`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"image"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" observer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"observe"),n("span",{class:"token punctuation"},"("),s("image"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),W=n("h2",{id:"loading-attribute",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#loading-attribute","aria-hidden":"true"},"#"),s(" Loading Attribute")],-1),Y=n("h3",{id:"原理-2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#原理-2","aria-hidden":"true"},"#"),s(" 原理")],-1),F=n("code",null,"img",-1),X=n("code",null,"loading",-1),Z=n("code",null,"lazy",-1),$={href:"https://caniuse.com/?search=lazy",target:"_blank",rel:"noopener noreferrer"},G=n("h3",{id:"完整代码-2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#完整代码-2","aria-hidden":"true"},"#"),s(" 完整代码")],-1),K={href:"https://github.com/Eathyn/lazy-load-image-solutions/tree/main/native-attribute",target:"_blank",rel:"noopener noreferrer"},Q=o(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://en.js.cx/clipart/solar/planets.jpg<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>640<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>360<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lazy<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="libraries" tabindex="-1"><a class="header-anchor" href="#libraries" aria-hidden="true">#</a> Libraries</h2>`,2),nn={href:"https://github.com/ApoorvSaxena/lozad.js",target:"_blank",rel:"noopener noreferrer"},sn=o(`<h2 id="custom-plugin-and-directive-in-vue" tabindex="-1"><a class="header-anchor" href="#custom-plugin-and-directive-in-vue" aria-hidden="true">#</a> Custom Plugin and Directive in Vue</h2><h3 id="前置知识-2" tabindex="-1"><a class="header-anchor" href="#前置知识-2" aria-hidden="true">#</a> 前置知识</h3><ul><li>vue plugin</li><li>vue custom directive</li></ul><h3 id="原理-3" tabindex="-1"><a class="header-anchor" href="#原理-3" aria-hidden="true">#</a> 原理</h3><ul><li><p>如果使用 Vue.js 作为框架，那么可以使用插件进行封装，方便在多个组件中使用。</p></li><li><p>在插件中，我创建了自定义指令 <code>v-lazy</code>。在 <code>created</code> 钩子中设置真实图片的 URL 和占位符图片；在 <code>mounted</code> 钩子中根据浏览器的兼容性，使用 <code>IntersectionObserver</code> 或滚动事件处理图片懒加载问题。代码如下：</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> lazyLoad <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> placeholderImg <span class="token operator">=</span> options<span class="token punctuation">.</span>placeholderImg

    app<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token string">&#39;lazy&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// 设置真实图片的 URL 和占位符图片</span>
      <span class="token function">created</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> realImgSrc <span class="token operator">=</span> binding<span class="token punctuation">.</span>value
        el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-src&#39;</span><span class="token punctuation">,</span> realImgSrc<span class="token punctuation">)</span>
        el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">,</span> placeholderImg<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 根据浏览器的兼容性，使用 \`IntersectionObserver\` 或滚动事件处理图片懒加载问题</span>
      <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>IntersectionObserver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          lazyLoad<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          lazyLoad<span class="token punctuation">.</span><span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token function">throttle</span><span class="token punctuation">(</span>lazyLoad<span class="token punctuation">.</span>loadImage<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
    <span class="token attr-name">v-lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>https://en.js.cx/clipart/solar/planets.jpg&#39;<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>360<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>640<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="完整代码-3" tabindex="-1"><a class="header-anchor" href="#完整代码-3" aria-hidden="true">#</a> 完整代码</h3>`,9),an={href:"https://github.com/Eathyn/lazy-load-image-solutions/tree/main/vue-plugin",target:"_blank",rel:"noopener noreferrer"},tn=n("h2",{id:"refs",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#refs","aria-hidden":"true"},"#"),s(" Refs")],-1),en={href:"https://wp-rocket.me/blog/lazyloading/#section-2",target:"_blank",rel:"noopener noreferrer"},on={href:"https://javascript.info/coordinates#element-coordinates-getboundingclientrect",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://javascript.info/size-and-scroll-window#width-height-of-the-window",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://javascript.info/onscroll#load-visible-images",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://blog.webdevsimplified.com/2022-01/intersection-observer/",target:"_blank",rel:"noopener noreferrer"},un={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-loading",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://juejin.cn/post/6903774214780616718#heading-3",target:"_blank",rel:"noopener noreferrer"};function dn(kn,vn){const t=u("ExternalLinkIcon"),i=u("CodeTabs");return d(),k("div",null,[g,h,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",f,[s("图片懒加载的优点"),a(t)])])]),y,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",_,[s("getBoundingClientRect API"),a(t)])])]),w,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",q,[s("window.innerHeight"),a(t)])])]),I,x,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",z,[s("dataset"),a(t)])])]),j,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",S,[s("图片懒加载原理"),a(t)])])]),A,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",R,[s("Source Code"),a(t)])])]),a(i,{id:"153",data:[{title:"HTML"},{title:"JavaScript"}]},{tab0:e(({title:c,value:p,isActive:l})=>[L]),tab1:e(({title:c,value:p,isActive:l})=>[C]),_:1}),E,V,H,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",O,[s("IntersectionObserver API"),a(t)])])]),B,a(i,{id:"178",data:[{title:"HTML"},{title:"CSS"},{title:"JavaScript"}]},{tab0:e(({title:c,value:p,isActive:l})=>[T]),tab1:e(({title:c,value:p,isActive:l})=>[P]),tab2:e(({title:c,value:p,isActive:l})=>[M]),_:1}),N,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",U,[s("Source Code"),a(t)])])]),a(i,{id:"218",data:[{title:"HTML"},{title:"JavaScript"}]},{tab0:e(({title:c,value:p,isActive:l})=>[D]),tab1:e(({title:c,value:p,isActive:l})=>[J]),_:1}),W,Y,n("p",null,[s("将 "),F,s(" 元素的 "),X,s(" 属性的值设置为 "),Z,s(" 也可以实现图片懒加载，但是这个属性值的浏览器兼容性目前比较差，可参考 "),n("a",$,[s("can I use"),a(t)]),s("。")]),G,n("blockquote",null,[n("p",null,[s("Refs: "),n("a",K,[s("Source Code"),a(t)])])]),Q,n("p",null,[n("a",nn,[s("lozad.js"),a(t)])]),sn,n("blockquote",null,[n("p",null,[s("Ref: "),n("a",an,[s("Source Code"),a(t)])])]),tn,n("ul",null,[n("li",null,[n("a",en,[s("Why Should You Use Lazy Loading to Make Images Load Faster"),a(t)])]),n("li",null,[n("a",on,[s("getBoundingClientRect API"),a(t)])]),n("li",null,[n("a",cn,[s("window.innerHeight"),a(t)])]),n("li",null,[n("a",pn,[s("图片懒加载：scroll 方案"),a(t)])]),n("li",null,[n("a",ln,[s("IntersectionObserver API"),a(t)])]),n("li",null,[n("a",un,[s("Loading attribute"),a(t)])]),n("li",null,[n("a",rn,[s("v-lazy Directive"),a(t)])])])])}const bn=r(b,[["render",dn],["__file","index.html.vue"]]);export{bn as default};
