import{_ as u,W as r,X as d,Y as a,Z as n,$ as e,a1 as s,a0 as p,C as c}from"./framework-0d71bc9d.js";const g="/blog/assets/fullhash-12b52e7a.png",_="/blog/assets/chunkhash-33512c79.png",f="/blog/assets/chunkhash_shortcoming-32499313.png",k="/blog/assets/contenthash-6d640df6.png",m="/blog/assets/non-initial_chunk_affection-6aa78fef.png",b={},v=a("h1",{id:"hash",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#hash","aria-hidden":"true"},"#"),n(" Hash")],-1),x=a("p",null,"Ref",-1),j={href:"https://juejin.cn/post/6844904018053955591",target:"_blank",rel:"noopener noreferrer"},y={href:"https://webpack.js.org/configuration/output/#template-strings",target:"_blank",rel:"noopener noreferrer"},z=p('<h2 id="role" tabindex="-1"><a class="header-anchor" href="#role" aria-hidden="true">#</a> Role</h2><ul><li>使用哈希值后可以利用浏览器的缓存功能获得更快的加载速度。</li></ul><h2 id="full-hash" tabindex="-1"><a class="header-anchor" href="#full-hash" aria-hidden="true">#</a> full hash</h2><ul><li>项目级别的 hash。</li><li>所有输出文件的 hash 都相同。</li><li>改变其中一个文件的内容会导致其他所有文件的 hash 都改变。</li></ul><figure><img src="'+g+'" alt="所有输出文件的 hash 都相同" height="150" tabindex="0" loading="lazy"><figcaption>所有输出文件的 hash 都相同</figcaption></figure><ul><li>缺点：改变其中一个文件的内容会导致其他所有文件的 hash 都改变。导致浏览器缓存失效。</li></ul><h2 id="chunk-hash" tabindex="-1"><a class="header-anchor" href="#chunk-hash" aria-hidden="true">#</a> chunk hash</h2><ul><li>chunk 级别的 hash。</li><li>不同 chunk 的输出文件的 hash 不相同。</li><li>改变其中一个 chunk 的内容不会导致其他 chunk 文件的 hash 改变。</li></ul><figure><img src="'+_+'" alt="改变其中一个 chunk 的内容不会导致其他 chunk 文件的 hash 改变" height="220" tabindex="0" loading="lazy"><figcaption>改变其中一个 chunk 的内容不会导致其他 chunk 文件的 hash 改变</figcaption></figure><ul><li>缺点：如果在 js 文件中引入 css 文件，并且使用 <code>mini-css-extract-plugin</code> 提取出 css 文件，那么当 js 文件的 hash 改变时，css 文件的 hash 也会改变。导致浏览器中 css 文件的缓存失效。</li></ul><figure><img src="'+f+'" alt="chunk hash 的缺点" height="220" tabindex="0" loading="lazy"><figcaption>chunk hash 的缺点</figcaption></figure><h2 id="content-hash" tabindex="-1"><a class="header-anchor" href="#content-hash" aria-hidden="true">#</a> content hash</h2><ul><li>内容级别的 hash。</li><li>不同内容的输出文件的 hash 不相同。</li><li>改变其中一个文件的内容不会导致其他文件的 hash 改变。</li><li>解决了 chunk hash 的缺点。</li></ul><figure><img src="'+k+'" alt="content hash 解决了 chunk hash 的缺点" height="220" tabindex="0" loading="lazy"><figcaption>content hash 解决了 chunk hash 的缺点</figcaption></figure><h2 id="non-initial-chunk-affects-initial-chunk" tabindex="-1"><a class="header-anchor" href="#non-initial-chunk-affects-initial-chunk" aria-hidden="true">#</a> non-initial chunk affects initial chunk</h2><ul><li><code>non-initial chunk</code> 改变后会改变 <code>initial chunk</code> 的 hash。如下面代码所示，改变 <code>module_b</code> 的内容会导致 <code>entry_a</code> 的 hash 改变，但 <code>module_a</code> 的 hash 不会改变。</li></ul>',16),C=a("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[a("pre",{class:"language-javascript"},[a("code",null,[a("span",{class:"token keyword"},"import"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'./module_a'"),a("span",{class:"token punctuation"},")"),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),w=a("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[a("pre",{class:"language-javascript"},[a("code",null,[a("span",{class:"token keyword"},"import"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'./module_b'"),a("span",{class:"token punctuation"},")"),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),N=a("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[a("pre",{class:"language-javascript"},[a("code",null,[n("console"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"log"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'module b'"),a("span",{class:"token punctuation"},")"),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),V=a("figure",null,[a("img",{src:m,alt:"改变  的内容会导致  的 hash 改变",height:"250",tabindex:"0",loading:"lazy"}),a("figcaption",null,[n("改变 "),a("code",null,"module_b"),n(" 的内容会导致 "),a("code",null,"entry_a"),n(" 的 hash 改变")])],-1);function A(B,E){const i=c("ExternalLinkIcon"),o=c("CodeTabs");return r(),d("div",null,[v,a("blockquote",null,[x,a("ul",null,[a("li",null,[a("a",j,[n("hash comparison"),e(i)])]),a("li",null,[a("a",y,[n("docs"),e(i)])])])]),z,e(o,{id:"131",data:[{title:"entry_a.js"},{title:"module_a.js"},{title:"module_b.js"}]},{tab0:s(({title:t,value:l,isActive:h})=>[C]),tab1:s(({title:t,value:l,isActive:h})=>[w]),tab2:s(({title:t,value:l,isActive:h})=>[N]),_:1},8,["data"]),V])}const I=u(b,[["render",A],["__file","index.html.vue"]]);export{I as default};
