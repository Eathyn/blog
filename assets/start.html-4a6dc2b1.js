import{_ as i,W as s,X as d,Y as e,Z as n,$ as o,a1 as c,a0 as l,C as t}from"./framework-0d71bc9d.js";const p="/blog/assets/view_and_appservice_threads-40024bb8.png",h={},u=e("h1",{id:"启动性能",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#启动性能","aria-hidden":"true"},"#"),n(" 启动性能")],-1),_=e("ul",null,[e("li",null,"启动性能：让用户可以更快地打开并看到小程序。"),e("li",null,[n("小程序启动指的是用户打开小程序到首页渲染完成，首页渲染完成的标志是首个页面的 "),e("code",null,"onReady"),n(" 事件被触发。")])],-1),m=e("h2",{id:"代码包体积优化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#代码包体积优化","aria-hidden":"true"},"#"),n(" 代码包体积优化")],-1),f=e("p",null,"Reference:",-1),E={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start_optimizeA.html",target:"_blank",rel:"noopener noreferrer"},g=e("ul",null,[e("li",null,"拆分主包、分包预下载、分包异步化。"),e("li",null,"如果自定义组件和插件只是在少数页面中使用，则应该在页面的 json 文件中配置，而不是在 app.json 中配置。在 app.json 中配置的自定义组件和插件会随着主包一起下载和注入 JS 代码。"),e("li",null,"项目中的多媒体文件会占用包体积，最后通过 URL 的方式引入。"),e("li",null,"利用打包工具的 tree-shaking 特性去除无依赖代码。")],-1),k=e("h2",{id:"代码注入优化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#代码注入优化","aria-hidden":"true"},"#"),n(" 代码注入优化")],-1),q=e("h3",{id:"按需注入",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#按需注入","aria-hidden":"true"},"#"),n(" 按需注入")],-1),v=e("p",null,"Reference:",-1),b={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start_optimizeB.html#_1-%E4%BD%BF%E7%94%A8%E6%8C%89%E9%9C%80%E6%B3%A8%E5%85%A5",target:"_blank",rel:"noopener noreferrer"},A={href:"https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#lazyCodeLoading",target:"_blank",rel:"noopener noreferrer"},x=l(`<ul><li><p>默认情况下，未被访问的页面和未使用的组件会随着启动页面的开始而注入。使用按需注入可以避免不必要的代码注入。</p></li><li><p>在 <code>app.json</code> 中配置 <code>&quot;lazyCodeLoading&quot;: &quot;requiredComponents&quot;</code>。</p></li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;lazyCodeLoading&quot;</span><span class="token operator">:</span> <span class="token string">&quot;requiredComponents&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用时注入" tabindex="-1"><a class="header-anchor" href="#用时注入" aria-hidden="true">#</a> 用时注入</h3>`,3),B=e("p",null,"Reference:",-1),w={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/ability/lazyload.html#%E7%94%A8%E6%97%B6%E6%B3%A8%E5%85%A5",target:"_blank",rel:"noopener noreferrer"},C={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/placeholder.html",target:"_blank",rel:"noopener noreferrer"},y=e("ul",null,[e("li",null,"用时注入：可以指定一些组件不在小程序启动的时候注入，而是在真正渲染的时候注入。"),e("li",null,[n("将 "),e("code",null,"lazyCodeLoading"),n(" 设置为 "),e("code",null,"requiredComponents"),n(" 之后，为自定义组件配置占位组件，组件就会自动被视为用时注入组件。")])],-1),z=e("h3",{id:"同步-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#同步-api","aria-hidden":"true"},"#"),n(" 同步 API")],-1),F={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start_optimizeB.html#_3-%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%87%8F%E5%B0%91%E5%90%8C%E6%AD%A5-API-%E7%9A%84%E8%B0%83%E7%94%A8",target:"_blank",rel:"noopener noreferrer"},L=e("ul",null,[e("li",null,"在小程序启动过程中尽量避免调用同步 API（大部分以 Sync 结尾），因为同步 API 会阻塞当前的 JS 线程。")],-1),R=e("h3",{id:"复杂运算",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#复杂运算","aria-hidden":"true"},"#"),n(" 复杂运算")],-1),D={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start_optimizeB.html#_4-%E9%81%BF%E5%85%8D%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E8%BF%9B%E8%A1%8C%E5%A4%8D%E6%9D%82%E8%BF%90%E7%AE%97",target:"_blank",rel:"noopener noreferrer"},j=l('<ul><li>尽量不要把复杂的逻辑运算放到 <code>App.onLaunch</code>、<code>App.onShow</code>, <code>Page.onLoad</code>, <code>Page.onShow</code>，将复杂的运算延迟到启动完成后进行。</li></ul><h2 id="首屏渲染优化" tabindex="-1"><a class="header-anchor" href="#首屏渲染优化" aria-hidden="true">#</a> 首屏渲染优化</h2><h3 id="初始渲染缓存" tabindex="-1"><a class="header-anchor" href="#初始渲染缓存" aria-hidden="true">#</a> 初始渲染缓存</h3>',3),I=e("p",null,"Reference:",-1),P={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start_optimizeC.html#_2-%E5%90%AF%E7%94%A8%E3%80%8C%E5%88%9D%E5%A7%8B%E6%B8%B2%E6%9F%93%E7%BC%93%E5%AD%98%E3%80%8D",target:"_blank",rel:"noopener noreferrer"},S={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/view/initial-rendering-cache.html",target:"_blank",rel:"noopener noreferrer"},N={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page-life-cycle.html",target:"_blank",rel:"noopener noreferrer"},V=l('<ul><li>初始渲染缓存：页面第一次被打开后，将页面初始渲染的结果写入缓存中，第二次打开时视图层不需要等待逻辑层的初始化计算和返回的数据，而是直接从缓存中获取缓存结果并渲染出来。</li></ul><figure><img src="'+p+'" alt="视图层和逻辑层的交互过程" height="320" tabindex="0" loading="lazy"><figcaption>视图层和逻辑层的交互过程</figcaption></figure><ul><li><p>初始渲染缓存可用于：</p><ul><li>快速展示出页面中永远不会变的部分</li><li>预先展示一个骨架页，提升用户体验</li><li>展示自定义的加载提示</li><li>提前展示广告</li></ul></li><li><p>初始渲染缓存仅支持一部分内置组件。</p></li></ul>',3);function J(T,U){const r=t("ExternalLinkIcon"),a=t("RouterLink");return s(),d("div",null,[u,_,m,e("blockquote",null,[f,e("ul",null,[e("li",null,[e("a",E,[n("代码包体积优化"),o(r)])]),e("li",null,[o(a,{to:"/front_end/mini_program/subpackage/"},{default:c(()=>[n("分包")]),_:1})])])]),g,k,q,e("blockquote",null,[v,e("ul",null,[e("li",null,[e("a",b,[n("按需注入"),o(r)])]),e("li",null,[e("a",A,[n("配置"),o(r)])])])]),x,e("blockquote",null,[B,e("ul",null,[e("li",null,[e("a",w,[n("用时注入"),o(r)])]),e("li",null,[e("a",C,[n("占位组件"),o(r)])])])]),y,z,e("blockquote",null,[e("p",null,[n("Reference: "),e("a",F,[n("启动过程中减少同步 API 的调用"),o(r)])])]),L,R,e("blockquote",null,[e("p",null,[n("Reference: "),e("a",D,[n("避免启动过程进行复杂运算"),o(r)])])]),j,e("blockquote",null,[I,e("ul",null,[e("li",null,[e("a",P,[n("启动初始渲染缓存"),o(r)])]),e("li",null,[e("a",S,[n("初始渲染缓存"),o(r)])]),e("li",null,[e("a",N,[n("视图层和逻辑层的交互过程"),o(r)])])])]),V])}const X=i(h,[["render",J],["__file","start.html.vue"]]);export{X as default};
