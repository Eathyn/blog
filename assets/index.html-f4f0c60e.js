const e=JSON.parse('{"key":"v-358731da","path":"/front_end/vue/basic/next_tick/","title":"NextTick","lang":"zh-CN","frontmatter":{"date":"2022-07-28T00:00:00.000Z","category":"Vue","tag":["basic","nextTick"],"description":"NextTick Vue 更新 DOM 的策略 一个响应式状态更新后，Vue 不会立即更新 DOM，而是会收集所有更改的响应式状态，并在虚拟 DOM 中更新它们。下一个事件循环开始后，Vue 才根据虚拟 DOM 更改实际 DOM。之所以这样做，是因为积累多个响应式状态更新后一次性修改 DOM 比每个响应式状态更新后立刻修改 DOM 所消耗的资源少。 nextTick 的作用 nextTick 可以让开发者捕获到 DOM 更新后的时刻，用于确保接下来的操作是在 DOM 完成更新的前提下执行的。 例子","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/front_end/vue/basic/next_tick/"}],["meta",{"property":"og:title","content":"NextTick"}],["meta",{"property":"og:description","content":"NextTick Vue 更新 DOM 的策略 一个响应式状态更新后，Vue 不会立即更新 DOM，而是会收集所有更改的响应式状态，并在虚拟 DOM 中更新它们。下一个事件循环开始后，Vue 才根据虚拟 DOM 更改实际 DOM。之所以这样做，是因为积累多个响应式状态更新后一次性修改 DOM 比每个响应式状态更新后立刻修改 DOM 所消耗的资源少。 nextTick 的作用 nextTick 可以让开发者捕获到 DOM 更新后的时刻，用于确保接下来的操作是在 DOM 完成更新的前提下执行的。 例子"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"basic"}],["meta",{"property":"article:tag","content":"nextTick"}],["meta",{"property":"article:published_time","content":"2022-07-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NextTick\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Vue 更新 DOM 的策略","slug":"vue-更新-dom-的策略","link":"#vue-更新-dom-的策略","children":[]},{"level":2,"title":"nextTick 的作用","slug":"nexttick-的作用","link":"#nexttick-的作用","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":2,"title":"Refs","slug":"refs","link":"#refs","children":[]}],"git":{},"readingTime":{"minutes":0.84,"words":251},"filePathRelative":"front_end/vue/basic/next_tick/index.md","localizedDate":"2022年7月28日","excerpt":"<h1> NextTick</h1>\\n<h2> Vue 更新 DOM 的策略</h2>\\n<p>一个响应式状态更新后，Vue 不会立即更新 DOM，而是会收集所有更改的响应式状态，并在虚拟 DOM 中更新它们。下一个事件循环开始后，Vue 才根据虚拟 DOM 更改实际 DOM。之所以这样做，是因为积累多个响应式状态更新后一次性修改 DOM 比每个响应式状态更新后立刻修改 DOM 所消耗的资源少。</p>\\n<h2> nextTick 的作用</h2>\\n<p>nextTick 可以让开发者捕获到 DOM 更新后的时刻，用于确保接下来的操作是在 DOM 完成更新的前提下执行的。</p>\\n<h2> 例子</h2>","autoDesc":true}');export{e as data};
