const n=JSON.parse(`{"key":"v-72fe34ad","path":"/back_end/node/extract_data/","title":"Extract Data","lang":"zh-CN","frontmatter":{"date":"2023-08-09T00:00:00.000Z","category":"Node.js","description":"Extract Data 介绍几种在服务端获取客户端传递的数据的方式。 Express Body 需要使用 body-parser 处理。 请求 路径：http://127.0.0.1:3000/find_user 参数：body -&gt; x-www-form-urlencoded -&gt; { id: 1 } const express = require('express') const bodyParser = require('body-parser') const app = express() app.use(bodyParser.urlencoded({ extended: true })) app.post('/find_user', (req, res) =&gt; { const {id} = req.body res.send(\`the user is found. id: \${id}\`) })","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/back_end/node/extract_data/"}],["meta",{"property":"og:title","content":"Extract Data"}],["meta",{"property":"og:description","content":"Extract Data 介绍几种在服务端获取客户端传递的数据的方式。 Express Body 需要使用 body-parser 处理。 请求 路径：http://127.0.0.1:3000/find_user 参数：body -&gt; x-www-form-urlencoded -&gt; { id: 1 } const express = require('express') const bodyParser = require('body-parser') const app = express() app.use(bodyParser.urlencoded({ extended: true })) app.post('/find_user', (req, res) =&gt; { const {id} = req.body res.send(\`the user is found. id: \${id}\`) })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2023-08-09T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Extract Data\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-09T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Express","slug":"express","link":"#express","children":[{"level":3,"title":"Body","slug":"body","link":"#body","children":[]},{"level":3,"title":"Query String","slug":"query-string","link":"#query-string","children":[]},{"level":3,"title":"Route Parameter","slug":"route-parameter","link":"#route-parameter","children":[]}]}],"git":{},"readingTime":{"minutes":0.48,"words":144},"filePathRelative":"back_end/node/extract_data/index.md","localizedDate":"2023年8月9日","excerpt":"<h1> Extract Data</h1>\\n<p>介绍几种在服务端获取客户端传递的数据的方式。</p>\\n<h2> Express</h2>\\n<h3> Body</h3>\\n<ul>\\n<li>需要使用 <code>body-parser</code> 处理。</li>\\n<li>请求\\n<ul>\\n<li>路径：<code>http://127.0.0.1:3000/find_user</code></li>\\n<li>参数：body -&gt; x-www-form-urlencoded -&gt; { id: 1 }</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> express <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'express'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> bodyParser <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'body-parser'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> app <span class=\\"token operator\\">=</span> <span class=\\"token function\\">express</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>bodyParser<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">urlencoded</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">extended</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">post</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/find_user'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">req<span class=\\"token punctuation\\">,</span> res</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span>id<span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> req<span class=\\"token punctuation\\">.</span>body\\n  res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span><span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">the user is found. id: </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>id<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
