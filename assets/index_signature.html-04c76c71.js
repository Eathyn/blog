import{_ as t,W as i,X as o,Y as n,Z as e,$ as a,a0 as l,C as c}from"./framework-0d71bc9d.js";const r={},p=n("h1",{id:"index-signature",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#index-signature","aria-hidden":"true"},"#"),e(" Index Signature")],-1),d=n("p",null,"Reference:",-1),u={href:"https://www.typescriptlang.org/docs/handbook/2/objects.html#index-signatures",target:"_blank",rel:"noopener noreferrer"},b={href:"https://dmitripavlutin.com/typescript-index-signatures/",target:"_blank",rel:"noopener noreferrer"},k=l(`<h2 id="definition" tabindex="-1"><a class="header-anchor" href="#definition" aria-hidden="true">#</a> Definition</h2><ul><li>索引签名（index signature）适用于不知道对象具体的键名，但是知道键的类型和值的类型。</li></ul><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h2><ul><li>如下代码所示： <ul><li><code>[key: string]: number</code> 表示所有<strong>字符串类型</strong>的键的值类型都是 <code>number</code>。</li><li><code>obj1</code> 字符串类型的键的值的类型是 <code>number</code>，所以不会报错。</li><li><code>obj2</code> 字符串类型的键的值的类型是 <code>string</code>，所以会报错。</li></ul></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Obj</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> obj1<span class="token operator">:</span> Obj <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token comment">// ok</span>

<span class="token comment">// TS2322: Type &#39;string&#39; is not assignable to type &#39;number&#39;.</span>
<span class="token keyword">let</span> obj2<span class="token operator">:</span> Obj <span class="token operator">=</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token string">&#39;hi&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="key-type-conflict" tabindex="-1"><a class="header-anchor" href="#key-type-conflict" aria-hidden="true">#</a> Key Type Conflict</h2><ul><li>如下代码所示： <ul><li><code>[key: string]: number</code> 表示所有字符串类型的键的值类型都是 <code>number</code>。</li><li><code>a</code> 属于字符串类型的键，但是 <code>a</code> 的值类型是 <code>string</code>，和 <code>[key: string]: number</code> 冲突，所以会报错。</li></ul></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Obj</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span>
  a<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// TS2411: Property &#39;a&#39; of type &#39;string&#39; is not assignable to &#39;string&#39; index type &#39;number&#39;.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function h(g,m){const s=c("ExternalLinkIcon");return i(),o("div",null,[p,n("blockquote",null,[d,n("ul",null,[n("li",null,[n("a",u,[e("Index Signature"),a(s)])]),n("li",null,[n("a",b,[e("Index Signatures in TypeScript"),a(s)])])])]),k])}const _=t(r,[["render",h],["__file","index_signature.html.vue"]]);export{_ as default};
