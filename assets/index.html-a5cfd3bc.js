import{_ as e,W as p,X as i,Y as n,Z as s,$ as t,a0 as l,C as o}from"./framework-0d71bc9d.js";const c="/blog/assets/without_key-c6fc48b3.png",u="/blog/assets/with_key-26ea1eca.png",r={},k=l(`<h1 id="key" tabindex="-1"><a class="header-anchor" href="#key" aria-hidden="true">#</a> Key</h1><h2 id="what-is-key" tabindex="-1"><a class="header-anchor" href="#what-is-key" aria-hidden="true">#</a> What is key</h2><ul><li>The <code>key</code> special attribute is primarily used as a hint for Vue’s virtual DOM algorithm to identify VNodes when diffing the new list of nodes against the old list.</li></ul><h2 id="why-do-we-need-key" tabindex="-1"><a class="header-anchor" href="#why-do-we-need-key" aria-hidden="true">#</a> Why do we need key</h2><ul><li>Without keys, Vue uses an algorithm that minimizes element movement and tries to patch/reuse elements of the same type in-place as much as possible.</li><li>With keys, it will reorder elements based on the order change of keys, and elements with keys that are no longer present will always be removed/destroyed.</li></ul><h2 id="without-key" tabindex="-1"><a class="header-anchor" href="#without-key" aria-hidden="true">#</a> Without Key</h2><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- without key --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ item }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
items<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+c+`" alt="without key" tabindex="0" loading="lazy"><figcaption>without key</figcaption></figure><ol><li>比较 A 和 A，数据相同，因此不发生 DOM 操作</li><li>比较 B 和 B，数据相同，因此不发生 DOM 操作</li><li>比较 C 和 F，数据不相同，因此发生 DOM 操作，C 改为 F</li><li>比较 D 和 C，数据不相同，因此发生 DOM 操作，D 改成 C</li><li>比较 E 和 D，数据不相同，因此发生 DOM 操作，E 改成 D</li><li>将 E 插入到 DOM 中</li></ol><ul><li>一共执行<strong>三</strong>次更新和一次插入操作</li></ul><h2 id="with-key" tabindex="-1"><a class="header-anchor" href="#with-key" aria-hidden="true">#</a> With Key</h2><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- with key --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in items<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>{{ item }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
items<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+'" alt="with key" tabindex="0" loading="lazy"><figcaption>with key</figcaption></figure><ol><li>比较 A 和 A，数据相同，因此不发生 DOM 操作</li><li>比较 B 和 B，数据相同，因此不发生 DOM 操作</li><li>比较 C 和 F，数据不相同</li><li>比较 E 和 E，数据相同，因此不发生 DOM 操作</li><li>比较 D 和 D，数据相同，因此不发生 DOM 操作</li><li>比较 C 和 C，数据相同，因此不发生 DOM 操作</li><li>将 F 插入到 DOM 中</li></ol><ul><li>一共执行<strong>零</strong>次更新和一次插入操作。（使用 key 可以减少 DOM 操作）</li></ul><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>',16),d={href:"https://vuejs.org/api/built-in-special-attributes.html#key",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"key",-1),m={href:"https://vue3js.cn/interview/vue/key.html",target:"_blank",rel:"noopener noreferrer"};function v(h,b){const a=o("ExternalLinkIcon");return p(),i("div",null,[k,n("ul",null,[n("li",null,[n("a",d,[s("Vue "),g,s(" Attribute"),t(a)])]),n("li",null,[n("a",m,[s("With and Without Key"),t(a)])])])])}const y=e(r,[["render",v],["__file","index.html.vue"]]);export{y as default};
