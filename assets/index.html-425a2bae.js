import{_ as i,W as r,X as o,Y as e,Z as n,$ as a,a0 as t,C as l}from"./framework-0d71bc9d.js";const c="/blog/assets/find_address_and_port-865fb13f.png",p={},d=e("h1",{id:"configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#"),n(" Configuration")],-1),u=e("h2",{id:"国内镜像",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#国内镜像","aria-hidden":"true"},"#"),n(" 国内镜像")],-1),h=e("p",null,"Reference",-1),m={href:"https://npmmirror.com/",target:"_blank",rel:"noopener noreferrer"},g=t(`<ul><li><p>因为 NPM 官方的源（https://registry.npmjs.org/） 在国外，虽然通过代理可以访问，但是速度还是有点慢。所以我们需要配置国内镜像加快 NPM 包的下载速度。</p></li><li><p>如果长期使用阿里巴巴 NPM 镜像，则需要如下配置：</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果单次使用阿里巴巴 NPM 镜像，则在下载包时增加 <code>registry</code> 参数：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token operator">&lt;</span>package_name<span class="token operator">&gt;</span> <span class="token parameter variable">--registry</span><span class="token operator">=</span>https://registry.npmmirror.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="代理" tabindex="-1"><a class="header-anchor" href="#代理" aria-hidden="true">#</a> 代理</h2>`,5),_=e("p",null,"Reference",-1),f={href:"https://freesilo.com/?p=1228",target:"_blank",rel:"noopener noreferrer"},b={href:"https://medium.com/@ogbemudiatimothy/using-npm-install-behind-a-corporate-proxy-server-db150c128899",target:"_blank",rel:"noopener noreferrer"},v=t('<ul><li><p>因为 NPM 官方的源（https://registry.npmjs.org/） 在国外，所以需要通过代理才能访问。</p></li><li><p>以 Windows 10 为例，在搜索栏输入 proxy 或 代理，找到地址和端口：</p></li></ul><figure><img src="'+c+`" alt="寻找端口和地址" height="350" tabindex="0" loading="lazy"><figcaption>寻找端口和地址</figcaption></figure><ul><li>配置 NPM 代理：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> proxy <span class="token string">&quot;http://127.0.0.1:10809&quot;</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> https-proxy <span class="token string">&quot;http://127.0.0.1:10809&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function k(x,y){const s=l("ExternalLinkIcon");return r(),o("div",null,[d,u,e("blockquote",null,[h,e("ul",null,[e("li",null,[e("a",m,[n("阿里巴巴 NPM 镜像"),a(s)])])])]),g,e("blockquote",null,[_,e("ul",null,[e("li",null,[e("a",f,[n("设置 NPM 代理"),a(s)])]),e("li",null,[e("a",b,[n("设置 NPM 代理"),a(s)])])])]),v])}const M=i(p,[["render",k],["__file","index.html.vue"]]);export{M as default};
