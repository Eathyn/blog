const n=JSON.parse('{"key":"v-26f36208","path":"/front_end/typescript/syntax/function.html","title":"Function","lang":"zh-CN","frontmatter":{"date":"2023-05-31T00:00:00.000Z","category":"TypeScript","description":"Function Typing Function Reference: TypeScript Roadmap TypeScript 可以对函数的参数和返回值设置类型。 // 具有类型的函数声明 function add(a: number, b: number): number { return a + b } // 具有类型的箭头函数 const multiply = (a: number, b: number): number =&gt; { return a * b } // 定义函数类型 let divide: (a: number, b: number) =&gt; number divide = (a, b) =&gt; { return a / b }","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/front_end/typescript/syntax/function.html"}],["meta",{"property":"og:title","content":"Function"}],["meta",{"property":"og:description","content":"Function Typing Function Reference: TypeScript Roadmap TypeScript 可以对函数的参数和返回值设置类型。 // 具有类型的函数声明 function add(a: number, b: number): number { return a + b } // 具有类型的箭头函数 const multiply = (a: number, b: number): number =&gt; { return a * b } // 定义函数类型 let divide: (a: number, b: number) =&gt; number divide = (a, b) =&gt; { return a / b }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:52:13.000Z"}],["meta",{"property":"article:published_time","content":"2023-05-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:52:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-31T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-31T09:52:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Typing Function","slug":"typing-function","link":"#typing-function","children":[]},{"level":2,"title":"Function Overloading","slug":"function-overloading","link":"#function-overloading","children":[]}],"git":{"createdTime":1685526733000,"updatedTime":1685526733000,"contributors":[{"name":"Eathyn","email":"eathynzakas@gmail.com","commits":1}]},"readingTime":{"minutes":0.98,"words":295},"filePathRelative":"front_end/typescript/syntax/function.md","localizedDate":"2023年5月31日","excerpt":"<h1> Function</h1>\\n<h2> Typing Function</h2>\\n<blockquote>\\n<p>Reference: <a href=\\"https://roadmap.sh/typescript\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">TypeScript Roadmap</a></p>\\n</blockquote>\\n<ul>\\n<li>TypeScript 可以对函数的参数和返回值设置类型。</li>\\n</ul>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// 具有类型的函数声明</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> b<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">+</span> b\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 具有类型的箭头函数</span>\\n<span class=\\"token keyword\\">const</span> multiply <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> b<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">*</span> b\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 定义函数类型</span>\\n<span class=\\"token keyword\\">let</span> <span class=\\"token function-variable function\\">divide</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">,</span> b<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token builtin\\">number</span>\\n<span class=\\"token function-variable function\\">divide</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">/</span> b\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
