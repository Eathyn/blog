const n=JSON.parse(`{"key":"v-e6d865c0","path":"/front_end/javascript/for_loop_comparison/","title":"For Loop Comparison","lang":"zh-CN","frontmatter":{"date":"2023-06-17T00:00:00.000Z","category":"JavaScript","description":"For Loop Comparison for...in 概念 遍历对象的所有可枚举(enumerable)属性 包括继承的可枚举属性 不包括 symbol 属性 代码 const o1 = { a: 1 } const c = Symbol('c') const o2 = Object.create(o1, { b: { value: 2, enumerable: true }, [c]: { value: 3, enumerable: true } }) for (const prop in o2) { console.log(prop) // b, a }","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/front_end/javascript/for_loop_comparison/"}],["meta",{"property":"og:title","content":"For Loop Comparison"}],["meta",{"property":"og:description","content":"For Loop Comparison for...in 概念 遍历对象的所有可枚举(enumerable)属性 包括继承的可枚举属性 不包括 symbol 属性 代码 const o1 = { a: 1 } const c = Symbol('c') const o2 = Object.create(o1, { b: { value: 2, enumerable: true }, [c]: { value: 3, enumerable: true } }) for (const prop in o2) { console.log(prop) // b, a }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2023-06-17T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"For Loop Comparison\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-17T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"for...in","slug":"for-in","link":"#for-in","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]}]},{"level":2,"title":"for...of","slug":"for-of","link":"#for-of","children":[{"level":3,"title":"概念","slug":"概念-1","link":"#概念-1","children":[]},{"level":3,"title":"代码","slug":"代码-1","link":"#代码-1","children":[]}]},{"level":2,"title":"for await...of","slug":"for-await-of","link":"#for-await-of","children":[{"level":3,"title":"概念","slug":"概念-2","link":"#概念-2","children":[]},{"level":3,"title":"代码","slug":"代码-2","link":"#代码-2","children":[]}]},{"level":2,"title":"Refs","slug":"refs","link":"#refs","children":[]}],"git":{},"readingTime":{"minutes":0.72,"words":216},"filePathRelative":"front_end/javascript/for_loop_comparison/index.md","localizedDate":"2023年6月17日","excerpt":"<h1> For Loop Comparison</h1>\\n<h2> for...in</h2>\\n<h3> 概念</h3>\\n<ul>\\n<li>遍历对象的所有可枚举(enumerable)属性</li>\\n<li>包括继承的可枚举属性</li>\\n<li>不包括 symbol 属性</li>\\n</ul>\\n<h3> 代码</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> o1 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">a</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">const</span> c <span class=\\"token operator\\">=</span> <span class=\\"token function\\">Symbol</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'c'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> o2 <span class=\\"token operator\\">=</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">create</span><span class=\\"token punctuation\\">(</span>o1<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">b</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">value</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">enumerable</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">[</span>c<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">value</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">enumerable</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> prop <span class=\\"token keyword\\">in</span> o2<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>prop<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// b, a</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
