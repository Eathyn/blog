const e=JSON.parse('{"key":"v-c427c46e","path":"/cs/dsa/non-linear_structure/tree/tire/","title":"Tire","lang":"zh-CN","frontmatter":{"description":"Tire 介绍 tire 可用于文本的自动完成和自动修正。 tire 属于树的一种。 tire 来源于单词 retrieval。 tire 的发音理论上是 tree，但这与 tree 混淆了，所以很多人把 tire 发音为 try。 tire 的其他名字为 prefix tree（前缀树）或 digital tree（字典树）。 数据结构 字典树节点可以拥有多个子节点。 字典树节点是一个哈希表，键是字母，值是另一个字典树节点。","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/cs/dsa/non-linear_structure/tree/tire/"}],["meta",{"property":"og:title","content":"Tire"}],["meta",{"property":"og:description","content":"Tire 介绍 tire 可用于文本的自动完成和自动修正。 tire 属于树的一种。 tire 来源于单词 retrieval。 tire 的发音理论上是 tree，但这与 tree 混淆了，所以很多人把 tire 发音为 try。 tire 的其他名字为 prefix tree（前缀树）或 digital tree（字典树）。 数据结构 字典树节点可以拥有多个子节点。 字典树节点是一个哈希表，键是字母，值是另一个字典树节点。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://eathyn.github.io/blog/blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-23T10:04:43.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Tire"}],["meta",{"property":"article:modified_time","content":"2023-04-23T10:04:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Tire\\",\\"image\\":[\\"https://eathyn.github.io/blog/blog/\\"],\\"dateModified\\":\\"2023-04-23T10:04:43.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":2,"title":"存储方式","slug":"存储方式","link":"#存储方式","children":[]},{"level":2,"title":"搜索","slug":"搜索","link":"#搜索","children":[{"level":3,"title":"方式","slug":"方式","link":"#方式","children":[]},{"level":3,"title":"算法","slug":"算法","link":"#算法","children":[]},{"level":3,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":3,"title":"时间复杂度","slug":"时间复杂度","link":"#时间复杂度","children":[]}]},{"level":2,"title":"插入","slug":"插入","link":"#插入","children":[{"level":3,"title":"算法","slug":"算法-1","link":"#算法-1","children":[]},{"level":3,"title":"实现","slug":"实现-1","link":"#实现-1","children":[]},{"level":3,"title":"时间复杂度","slug":"时间复杂度-1","link":"#时间复杂度-1","children":[]}]},{"level":2,"title":"自动完成算法","slug":"自动完成算法","link":"#自动完成算法","children":[{"level":3,"title":"初级算法","slug":"初级算法","link":"#初级算法","children":[]}]}],"git":{"createdTime":1681914484000,"updatedTime":1682244283000,"contributors":[{"name":"Eathyn","email":"eathynzakas@gmail.com","commits":3}]},"readingTime":{"minutes":2.64,"words":791},"filePathRelative":"cs/dsa/non-linear_structure/tree/tire/index.md","localizedDate":"2023年4月19日","excerpt":"<h1> Tire</h1>\\n<h2> 介绍</h2>\\n<ul>\\n<li>tire 可用于文本的自动完成和自动修正。</li>\\n<li>tire 属于树的一种。</li>\\n<li>tire 来源于单词 retrieval。</li>\\n<li>tire 的发音理论上是 tree，但这与 tree 混淆了，所以很多人把 tire 发音为 try。</li>\\n<li>tire 的其他名字为 prefix tree（前缀树）或 digital tree（字典树）。</li>\\n</ul>\\n<h2> 数据结构</h2>\\n<ul>\\n<li>字典树节点可以拥有多个子节点。</li>\\n<li>字典树节点是一个哈希表，键是字母，值是另一个字典树节点。</li>\\n</ul>","autoDesc":true}');export{e as data};
