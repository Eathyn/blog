import{_ as e,W as a,X as t,Y as n,Z as o,$ as i,a0 as p,C as c}from"./framework-c8ebc670.js";const l={},r=p(`<h1 id="_73-在-ts-文件中使用声明文件中的类型" tabindex="-1"><a class="header-anchor" href="#_73-在-ts-文件中使用声明文件中的类型" aria-hidden="true">#</a> 73 在 TS 文件中使用声明文件中的类型</h1><h2 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> Content</h2><ul><li>如果多个 <code>.ts</code> 文件中使用了同一个类型，那么可以把这个类型提取出来放到 <code>.d.ts</code> 文件中</li><li>通过 ES Modules 导出和导入类型</li></ul><p><em>types.d.ts</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>index.ts</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Person <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./types&#39;</span>

<span class="token keyword">let</span> person<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;eathyn&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>`,8),d={href:"https://www.bilibili.com/video/BV14Z4y1u7pi/?p=73&vd_source=9b4e3dff7609ad29f13d886e715862ba",target:"_blank",rel:"noopener noreferrer"};function u(k,m){const s=c("ExternalLinkIcon");return a(),t("div",null,[r,n("ol",null,[n("li",null,[n("a",d,[o("在 TS 文件中使用声明文件中的类型"),i(s)])])])])}const b=e(l,[["render",u],["__file","index.html.vue"]]);export{b as default};
