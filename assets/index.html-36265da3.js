import{_ as a,W as t,X as o,Y as e,Z as s,$ as l,a0 as i,C as r}from"./framework-0d71bc9d.js";const d="/blog/assets/venn_union-28cb76e0.png",c="/blog/assets/venn_intersect-56abfd62.png",p="/blog/assets/venn_except-5418f3df.png",u={},v=e("h1",{id:"set-operation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#set-operation","aria-hidden":"true"},"#"),s(" Set Operation")],-1),h=e("h2",{id:"union",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#union","aria-hidden":"true"},"#"),s(" Union")],-1),g={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-union/",target:"_blank",rel:"noopener noreferrer"},b=i('<ul><li><code>UNION</code>：将多个 <code>SELECT</code> 语句的返回结果集合在一起。</li></ul><figure><img src="'+d+`" alt="UNION" height="120" tabindex="0" loading="lazy"><figcaption>UNION</figcaption></figure><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">SELECT</span> select_list_1
<span class="token keyword">FROM</span> table_expresssion_1
<span class="token keyword">UNION</span>
<span class="token keyword">SELECT</span> select_list_2
<span class="token keyword">FROM</span> table_expression_2
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>限制</p><ul><li>所有 <code>SELECT</code> 语句的列名的数量和顺序必须相同。</li><li>同一列的数据类型必须兼容。</li></ul></li><li><p><code>UNION</code> 返回的结构不包含重复的行；<code>UNION ALL</code> 返回的结构包含重复的行。</p></li><li><p><code>ORDER BY</code> 必须放在最后一个 <code>SELECT</code> 语句之后，才能确保顺序正确。</p></li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">SELECT</span> select_list_1
<span class="token keyword">FROM</span> table_expresssion_1
<span class="token keyword">UNION</span>
<span class="token keyword">SELECT</span> select_list_2
<span class="token keyword">FROM</span> table_expression_2
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> sort_expression<span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="intersect" tabindex="-1"><a class="header-anchor" href="#intersect" aria-hidden="true">#</a> Intersect</h2>`,6),_={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-intersect/",target:"_blank",rel:"noopener noreferrer"},k=i('<ul><li><code>INTERSECT</code>：将多个 <code>SELECT</code> 语句的返回结果中相同的行集合在一起。</li></ul><figure><img src="'+c+`" alt="INTERSECT" height="120" tabindex="0" loading="lazy"><figcaption>INTERSECT</figcaption></figure><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">SELECT</span> select_list
<span class="token keyword">FROM</span> <span class="token keyword">A</span>
<span class="token keyword">INTERSECT</span>
<span class="token keyword">SELECT</span> select_list
<span class="token keyword">FROM</span> B<span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>限制：与 <code>UNION</code> 的限制相同。</li></ul><h2 id="except" tabindex="-1"><a class="header-anchor" href="#except" aria-hidden="true">#</a> Except</h2>`,5),m={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-except/",target:"_blank",rel:"noopener noreferrer"},E=i('<ul><li><code>EXCEPT</code>：返回第一次查询结果中不存在于第二次查询结果的行。</li></ul><figure><img src="'+p+`" alt="EXCEPT 韦恩图" height="120" tabindex="0" loading="lazy"><figcaption>EXCEPT 韦恩图</figcaption></figure><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">SELECT</span> select_list
<span class="token keyword">FROM</span> <span class="token keyword">A</span>
<span class="token keyword">EXCEPT</span> 
<span class="token keyword">SELECT</span> select_list
<span class="token keyword">FROM</span> B<span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>限制：与 <code>UNION</code> 的限制相同。</li></ul>`,4);function f(w,x){const n=r("ExternalLinkIcon");return t(),o("div",null,[v,h,e("blockquote",null,[e("p",null,[s("Reference: "),e("a",g,[s("Union"),l(n)])])]),b,e("blockquote",null,[e("p",null,[s("Reference: "),e("a",_,[s("Intersect"),l(n)])])]),k,e("blockquote",null,[e("p",null,[s("Reference: "),e("a",m,[s("Except"),l(n)])])]),E])}const N=a(u,[["render",f],["__file","index.html.vue"]]);export{N as default};
