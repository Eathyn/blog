const e=JSON.parse('{"key":"v-2a8d14e6","path":"/front_end/typescript/syntax/utility-types.html","title":"Utility Types","lang":"zh-CN","frontmatter":{"date":"2023-06-12T00:00:00.000Z","category":"TypeScript","description":"Utility Types Partial Type Reference: How the TypeScript Partial Type Works 将一个类型的所有属性都转变为可选（optional）属性，并生成一个新类型。","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/front_end/typescript/syntax/utility-types.html"}],["meta",{"property":"og:title","content":"Utility Types"}],["meta",{"property":"og:description","content":"Utility Types Partial Type Reference: How the TypeScript Partial Type Works 将一个类型的所有属性都转变为可选（optional）属性，并生成一个新类型。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2023-06-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Utility Types\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Partial Type","slug":"partial-type","link":"#partial-type","children":[]},{"level":2,"title":"Required Type","slug":"required-type","link":"#required-type","children":[]},{"level":2,"title":"Record Type","slug":"record-type","link":"#record-type","children":[]},{"level":2,"title":"Readonly Type","slug":"readonly-type","link":"#readonly-type","children":[]},{"level":2,"title":"Exclude Type","slug":"exclude-type","link":"#exclude-type","children":[]},{"level":2,"title":"Extract Type","slug":"extract-type","link":"#extract-type","children":[]},{"level":2,"title":"Omit Type","slug":"omit-type","link":"#omit-type","children":[]},{"level":2,"title":"Pick Type","slug":"pick-type","link":"#pick-type","children":[]},{"level":2,"title":"Parameters Type","slug":"parameters-type","link":"#parameters-type","children":[]},{"level":2,"title":"NonNullable Type","slug":"nonnullable-type","link":"#nonnullable-type","children":[]},{"level":2,"title":"Return Type","slug":"return-type","link":"#return-type","children":[]},{"level":2,"title":"Instance Type","slug":"instance-type","link":"#instance-type","children":[]}],"git":{},"readingTime":{"minutes":2.72,"words":815},"filePathRelative":"front_end/typescript/syntax/utility-types.md","localizedDate":"2023年6月12日","excerpt":"<h1> Utility Types</h1>\\n<h2> Partial Type</h2>\\n<blockquote>\\n<p>Reference: <a href=\\"https://dev.to/smpnjn/how-the-typescript-partial-type-works-2klj\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">How the TypeScript Partial Type Works</a></p>\\n</blockquote>\\n<ul>\\n<li>将一个类型的所有属性都转变为可选（optional）属性，并生成一个新类型。</li>\\n</ul>","autoDesc":true}');export{e as data};
