const e=JSON.parse('{"key":"v-2f4a9aca","path":"/front_end/typescript/book-learning_typescript/chapter_06.html","title":"Array","lang":"zh-CN","frontmatter":{"date":"2022-11-14T00:00:00.000Z","category":"TypeScript","tag":["Book - Learning TypeScript","chapter 06"],"description":"Array In TypeScript, array can only restore item of the same type. TypeScript infers what type of data a array can restore by type of its initial items. const arr = [1, 2] arr.push(3) // works arr.push(true) // error","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/front_end/typescript/book-learning_typescript/chapter_06.html"}],["meta",{"property":"og:title","content":"Array"}],["meta",{"property":"og:description","content":"Array In TypeScript, array can only restore item of the same type. TypeScript infers what type of data a array can restore by type of its initial items. const arr = [1, 2] arr.push(3) // works arr.push(true) // error"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-12T13:42:19.000Z"}],["meta",{"property":"article:tag","content":"Book - Learning TypeScript"}],["meta",{"property":"article:tag","content":"chapter 06"}],["meta",{"property":"article:published_time","content":"2022-11-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-12T13:42:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Array\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-12T13:42:19.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Array Types","slug":"array-types","link":"#array-types","children":[{"level":3,"title":"Array and Function Types","slug":"array-and-function-types","link":"#array-and-function-types","children":[]},{"level":3,"title":"Union-Type Arrays","slug":"union-type-arrays","link":"#union-type-arrays","children":[]},{"level":3,"title":"Evolving Any Arrays","slug":"evolving-any-arrays","link":"#evolving-any-arrays","children":[]},{"level":3,"title":"Multidimensional Arrays","slug":"multidimensional-arrays","link":"#multidimensional-arrays","children":[]}]},{"level":2,"title":"Array Members","slug":"array-members","link":"#array-members","children":[{"level":3,"title":"Caveat: Unsound Members","slug":"caveat-unsound-members","link":"#caveat-unsound-members","children":[]}]},{"level":2,"title":"Spreads and Rests","slug":"spreads-and-rests","link":"#spreads-and-rests","children":[{"level":3,"title":"Spreads","slug":"spreads","link":"#spreads","children":[]}]},{"level":2,"title":"Tuples","slug":"tuples","link":"#tuples","children":[{"level":3,"title":"Tuple Assignability","slug":"tuple-assignability","link":"#tuple-assignability","children":[{"level":4,"title":"Tuples as rest parameters","slug":"tuples-as-rest-parameters","link":"#tuples-as-rest-parameters","children":[]}]},{"level":3,"title":"Tuple Inferences","slug":"tuple-inferences","link":"#tuple-inferences","children":[{"level":4,"title":"Explicit tuple types","slug":"explicit-tuple-types","link":"#explicit-tuple-types","children":[]},{"level":4,"title":"Const asserted tuples","slug":"const-asserted-tuples","link":"#const-asserted-tuples","children":[]}]}]}],"git":{"createdTime":1681306939000,"updatedTime":1681306939000,"contributors":[{"name":"Eathyn","email":"eathynzakas@gmail.com","commits":1}]},"readingTime":{"minutes":2.6,"words":780},"filePathRelative":"front_end/typescript/book-learning_typescript/chapter_06.md","localizedDate":"2022年11月14日","excerpt":"<h1> Array</h1>\\n<ul>\\n<li>In TypeScript, array can only restore item of the same type.</li>\\n<li>TypeScript infers what type of data a array can restore by type of its initial items.</li>\\n</ul>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">const</span> arr <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span>\\narr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// works</span>\\narr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// error</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
