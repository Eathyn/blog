import{_ as l,W as o,X as h,$ as a,Y as e,Z as n,a0 as t,C as i}from"./framework-c8ebc670.js";const s={},c=t('<h1 id="tree" tabindex="-1"><a class="header-anchor" href="#tree" aria-hidden="true">#</a> Tree</h1><h2 id="terminology" tabindex="-1"><a class="header-anchor" href="#terminology" aria-hidden="true">#</a> Terminology</h2><h3 id="leaf-and-internal-node-edge" tabindex="-1"><a class="header-anchor" href="#leaf-and-internal-node-edge" aria-hidden="true">#</a> Leaf and Internal Node / Edge</h3><ul><li><p>叶子节点（leaf node）/ 外部节点（external node）：没有子节点的节点（D/E/C）。</p></li><li><p>内部节点（internal node）：至少有一个子节点的节点（A/B）。</p></li><li><p>边（edge）：连接两个节点的链接。</p></li></ul>',4),f=t('<h3 id="depth-and-height-of-node-height-of-tree" tabindex="-1"><a class="header-anchor" href="#depth-and-height-of-node-height-of-tree" aria-hidden="true">#</a> Depth and Height of Node / Height of Tree</h3><ul><li><p>节点的深度：根节点到该节点的路径上出现的边（edge）的数量。</p><ul><li>A 的深度是 0。因为根节点到 A 的路径上出现的边的数量为 0。</li><li>B 的深度是 1。因为根节点到 B 的路径上出现的边的数量为 1。</li><li>F 的深度是 3。因为根节点到 F 的路径上出现的边的数量为 3。</li></ul></li><li><p>节点的高度：该节点到任意叶子节点（leaf node）的最长路径上出现的边（edge）的数量。</p><ul><li>A 的高度是 3。因为 A 到 F 的路径上出现的边的数量为 3。</li><li>C 的高度是 0。因为 C 到 C 的路径上出现的边的数量为 0。</li></ul></li><li><p>树的高度：根节点的高度或最深的节点的深度。</p><ul><li>下图的树的高度是 3。</li></ul></li></ul>',2),p=e("h2",{id:"refs",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#refs","aria-hidden":"true"},"#"),n(" Refs")],-1),g={href:"https://www.programiz.com/dsa/trees",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.geeksforgeeks.org/height-and-depth-of-a-node-in-a-binary-tree/",target:"_blank",rel:"noopener noreferrer"};function _(m,x){const r=i("Mermaid"),d=i("ExternalLinkIcon");return o(),h("div",null,[c,a(r,{id:"mermaid-26",code:"eJzT1dXlKsksyUm1Unjav+3p2gkvupqeN+3Uf9rW+rJ5BZTzYt9OLpDCtJz88uSMxKIShRAnLgUFRwVdXTsFBMsZyHICs1zgLFcuAB3mIgg="}),f,a(r,{id:"mermaid-83",code:"eJzT1dXlKsksyUm1UnjR1fS8aefzWS3Ptm98umuZPpz/cvUMEP/ZgolwDhdIX1pOfnlyRmJRiUKIE5eCgqOCrq6dAoLlDGQ5gVkucJYrkOUKZrnBWX75KakaeaU5OZpcALTeM5o="}),p,e("ul",null,[e("li",null,[e("a",g,[n("leaf node, external node, edge"),a(d)])]),e("li",null,[e("a",u,[n("height and depth of node"),a(d)])])])])}const B=l(s,[["render",_],["__file","index.html.vue"]]);export{B as default};
