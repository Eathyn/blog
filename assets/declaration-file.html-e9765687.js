import{_ as p,W as o,X as i,Y as n,Z as s,$ as e,a0 as t,C as l}from"./framework-0d71bc9d.js";const c="/blog/assets/role_of_declaration_files-21f24eb3.png",r="/blog/assets/declaration_files_in_axios-80de5df0.png",u="/blog/assets/built-in_js_declaration_files-80a0df24.png",d="/blog/assets/built-in_web_declaration_files-18dafc2f.png",k="/blog/assets/self_declaration_file-0a476bfb.png",v="/blog/assets/type_lodash-1c1e5385.png",m={},b=n("h1",{id:"declaration-file",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#declaration-file","aria-hidden":"true"},"#"),s(" Declaration File")],-1),g=n("h2",{id:"definition",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#definition","aria-hidden":"true"},"#"),s(" Definition")],-1),f={href:"https://www.bilibili.com/video/BV14Z4y1u7pi/?p=69&vd_source=9b4e3dff7609ad29f13d886e715862ba",target:"_blank",rel:"noopener noreferrer"},h=t('<ul><li>类型声明文件 (declaration files) 的作用是为 JavaScript 提供类型信息，这样在 TS 项目中使用这些库时，就可以获得代码提示和类型保护等机制。</li></ul><figure><img src="'+c+'" alt="Role of Declaration Files" height="350" tabindex="0" loading="lazy"><figcaption>Role of Declaration Files</figcaption></figure><ul><li><code>Axios</code> 的类型声明文件定义在 <code>node_modules\\axios\\index.d.ts</code> 文件中。</li></ul><figure><img src="'+r+'" alt="Declaration Files in Axios" height="350" tabindex="0" loading="lazy"><figcaption>Declaration Files in Axios</figcaption></figure><h2 id="ts-vs-d-ts" tabindex="-1"><a class="header-anchor" href="#ts-vs-d-ts" aria-hidden="true">#</a> .ts vs .d.ts</h2>',5),y={href:"https://www.bilibili.com/video/BV14Z4y1u7pi/?p=69&vd_source=9b4e3dff7609ad29f13d886e715862ba",target:"_blank",rel:"noopener noreferrer"},_=t(`<h3 id="ts" tabindex="-1"><a class="header-anchor" href="#ts" aria-hidden="true">#</a> .ts</h3><ul><li>可以包含类型信息和可执行代码</li><li>可以被 ts 编译器编译为 js 文件</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="d-ts" tabindex="-1"><a class="header-anchor" href="#d-ts" aria-hidden="true">#</a> .d.ts</h3><ul><li>只能包含类型信息，不能包含可执行代码</li><li>不可以被 ts 编译器编译为 js 文件</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// TS1046: Top-level declarations in .d.ts files must start with either a &#39;declare&#39; or &#39;export&#39; modifier.</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ts-内置类型声明文件" tabindex="-1"><a class="header-anchor" href="#ts-内置类型声明文件" aria-hidden="true">#</a> TS 内置类型声明文件</h2>`,7),x={href:"https://www.bilibili.com/video/BV14Z4y1u7pi/?p=69&vd_source=9b4e3dff7609ad29f13d886e715862ba",target:"_blank",rel:"noopener noreferrer"},w=t(`<ul><li>TS 为所有的 JS API 提供了类型声明文件</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+`" alt="Built-in JS Declaration Files" tabindex="0" loading="lazy"><figcaption>Built-in JS Declaration Files</figcaption></figure><ul><li>TS 为所有的 Web API 提供了类型声明文件</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+'" alt="Built-in Web Declaration Files" tabindex="0" loading="lazy"><figcaption>Built-in Web Declaration Files</figcaption></figure><h2 id="第三方库的类型声明文件" tabindex="-1"><a class="header-anchor" href="#第三方库的类型声明文件" aria-hidden="true">#</a> 第三方库的类型声明文件</h2>',7),q={href:"https://www.bilibili.com/video/BV14Z4y1u7pi/?p=69&vd_source=9b4e3dff7609ad29f13d886e715862ba",target:"_blank",rel:"noopener noreferrer"},S=t(`<p>第三方库的类型声明文件有两种存在方式 :</p><ul><li>库自带的类型声明文件</li><li>由 DefinitelyTyped 提供的类型声明文件</li></ul><h3 id="库自带的类型声明文件" tabindex="-1"><a class="header-anchor" href="#库自带的类型声明文件" aria-hidden="true">#</a> 库自带的类型声明文件</h3><ul><li>有些库会自己携带类型声明文件，例如 <code>axios</code></li></ul><p><em>axios package.json</em></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.d.ts&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>index.d.ts</em></p><figure><img src="`+k+'" alt="Self Declaration File" tabindex="0" loading="lazy"><figcaption>Self Declaration File</figcaption></figure><h3 id="definitelytyped" tabindex="-1"><a class="header-anchor" href="#definitelytyped" aria-hidden="true">#</a> DefinitelyTyped</h3>',9),T={href:"https://github.com/DefinitelyTyped/DefinitelyTyped",target:"_blank",rel:"noopener noreferrer"},D={href:"https://www.typescriptlang.org/dt/search",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"DefinitelyTyped",-1),P=n("p",null,[n("em",null,"例子：")],-1),B=n("li",null,[n("code",null,"lodash"),s(" 自身没有 TS 类型声明文件，编写代码时没有提供代码提示和类型校验。首先通过 Type Search 查询是否有 "),n("code",null,"lodash"),s(" 的 TS 类型声明文件，如果有则下载，安装之后 TS 会自动加载该类型声明文件")],-1),F=n("code",null,"import xxx from xxx",-1),V={href:"https://github.com/microsoft/TypeScript/issues/27293#issuecomment-549047461",target:"_blank",rel:"noopener noreferrer"},C=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// ok</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> _ <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span>

<span class="token comment">// ok</span>
<span class="token comment">// import _ = require(&#39;lodash&#39;)</span>

<span class="token comment">// error</span>
<span class="token comment">// import _ from &#39;lodash&#39;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+'" alt="Type Lodash" height="300" tabindex="0" loading="lazy"><figcaption>Type Lodash</figcaption></figure><h2 id="在-ts-文件中使用声明文件中的类型" tabindex="-1"><a class="header-anchor" href="#在-ts-文件中使用声明文件中的类型" aria-hidden="true">#</a> 在 TS 文件中使用声明文件中的类型</h2>',3),J={href:"https://www.bilibili.com/video/BV14Z4y1u7pi/?p=69&vd_source=9b4e3dff7609ad29f13d886e715862ba",target:"_blank",rel:"noopener noreferrer"},R=t(`<ul><li>如果多个 <code>.ts</code> 文件中使用了同一个类型，那么可以把这个类型提取出来放到 <code>.d.ts</code> 文件中</li><li>通过 ES Modules 导出和导入类型</li></ul><p><em>types.d.ts</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>index.ts</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Person <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./types&#39;</span>

<span class="token keyword">let</span> person<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;eathyn&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="为已有的-js-文件提供类型声明-配置" tabindex="-1"><a class="header-anchor" href="#为已有的-js-文件提供类型声明-配置" aria-hidden="true">#</a> 为已有的 JS 文件提供类型声明 - 配置</h2>`,6),Z={href:"https://www.bilibili.com/video/BV14Z4y1u7pi/?p=69&vd_source=9b4e3dff7609ad29f13d886e715862ba",target:"_blank",rel:"noopener noreferrer"},z=t(`<ul><li>使用 <code>ts-loader</code> 处理 <code>.ts</code> 文件</li><li>根目录必须有 <code>tsconfig.json</code></li></ul><p><em>package.json</em></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack serve --mode development&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;html-webpack-plugin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.5.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ts-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^9.4.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;typescript&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.8.3&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.74.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack-cli&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.10.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack-dev-server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.11.1&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>webpack.config.js</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.ts&#39;</span><span class="token punctuation">,</span>

  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;main.js&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token literal-property property">devtool</span><span class="token operator">:</span> <span class="token string">&#39;eval-cheap-module-source-map&#39;</span><span class="token punctuation">,</span>

  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">hot</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.ts$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">&#39;ts-loader&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_moudles</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">template</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src/index.html&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="为已有的-js-文件提供类型声明-实现" tabindex="-1"><a class="header-anchor" href="#为已有的-js-文件提供类型声明-实现" aria-hidden="true">#</a> 为已有的 JS 文件提供类型声明 - 实现</h2>`,6),L={href:"https://www.bilibili.com/video/BV14Z4y1u7pi/?p=69&vd_source=9b4e3dff7609ad29f13d886e715862ba",target:"_blank",rel:"noopener noreferrer"},W=t(`<ul><li>在 TS 文件中导入 JS 文件时，TS 会自动加载与 JS 文件同名的 <code>.d.ts</code> 文件。例如：导入 <code>utils.js</code> 同时会加载 <code>utils.d.ts</code></li><li><code>declare</code> 关键字用于类型声明，为其他地方（例如 JS 文件）已存在的变量声明类型，而不是创建一个新的类型</li><li><code>interface</code> / <code>type</code> 声明的类型可以省略 <code>declare</code>；<code>let</code> / <code>function</code> 等声明的类型必须用 <code>declare</code></li></ul><p><em>utils.d.ts</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>n1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> n2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>

<span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Direction</span> <span class="token operator">=</span> <span class="token string">&#39;top&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;left&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;bottom&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;right&#39;</span>

<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">changeDirection</span><span class="token punctuation">(</span>direction<span class="token operator">:</span> Direction<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">LogPoint</span> <span class="token operator">=</span> <span class="token punctuation">(</span>point<span class="token operator">:</span> Point<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> logPoint<span class="token operator">:</span> LogPoint

<span class="token keyword">export</span> <span class="token punctuation">{</span>
  Person<span class="token punctuation">,</span>
  Point<span class="token punctuation">,</span>
  add<span class="token punctuation">,</span>
  changeDirection<span class="token punctuation">,</span>
  logPoint<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>utils.js</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> n1 <span class="token operator">+</span> n2
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">changeDirection</span><span class="token punctuation">(</span>direction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>direction<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">logPoint</span> <span class="token operator">=</span> <span class="token punctuation">(</span>point<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span>
  add<span class="token punctuation">,</span>
  changeDirection<span class="token punctuation">,</span>
  logPoint<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>index.ts</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> add<span class="token punctuation">,</span> changeDirection<span class="token punctuation">,</span> Person<span class="token punctuation">,</span> Point<span class="token punctuation">,</span> logPoint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>

<span class="token keyword">const</span> person<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;eathyn&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span>

<span class="token function">changeDirection</span><span class="token punctuation">(</span><span class="token string">&#39;top&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> point<span class="token operator">:</span> Point <span class="token operator">=</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  y<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token function">logPoint</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function A(E,I){const a=l("ExternalLinkIcon");return o(),i("div",null,[b,g,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",f,[s("Course-69"),e(a)])])]),h,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",y,[s("Course-70"),e(a)])])]),_,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",x,[s("Course-71"),e(a)])])]),w,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",q,[s("Course-72"),e(a)])])]),S,n("ul",null,[n("li",null,[n("a",T,[s("DefinitelyTyped"),e(a)]),s(" 是一个提供常见包的类型声明文件的仓库，当一些包自身没有提供 TS 类型声明文件时，就可以从这个仓库中下载该包的 TS 类型声明文件")]),n("li",null,[n("a",D,[s("Type Search"),e(a)]),s(" 可以快速查找 "),j,s(" 中是否有某个包的 TS 类型声明文件")])]),P,n("ul",null,[B,n("li",null,[s("使用 "),F,s(" 会报错，"),n("a",V,[s("参考"),e(a)])])]),C,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",J,[s("Course-73"),e(a)])])]),R,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",Z,[s("Course-74"),e(a)])])]),z,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",L,[s("Course-75"),e(a)])])]),W])}const H=p(m,[["render",A],["__file","declaration-file.html.vue"]]);export{H as default};
