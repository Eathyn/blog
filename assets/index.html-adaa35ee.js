import{_ as i,W as r,X as l,Y as e,Z as n,$ as t,a0 as a,C as o}from"./framework-0d71bc9d.js";const p={},c=e("h1",{id:"prettier",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prettier","aria-hidden":"true"},"#"),n(" Prettier")],-1),d=e("h2",{id:"prettier-vs-linter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prettier-vs-linter","aria-hidden":"true"},"#"),n(" Prettier vs. Linter")],-1),u={href:"https://prettier.io/docs/en/comparison",target:"_blank",rel:"noopener noreferrer"},v=e("ul",null,[e("li",null,"Linter 有两类规则，一类是代码质量的规则，用于发现代码中的错误，这是 Linter 的核心。另一类是代码格式化规则，这部分可以使用 Prettier 替代。")],-1),h=e("h2",{id:"安装与配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装与配置","aria-hidden":"true"},"#"),n(" 安装与配置")],-1),m=e("h3",{id:"prettier-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prettier-1","aria-hidden":"true"},"#"),n(" Prettier")],-1),g=e("p",null,"Reference:",-1),b={href:"https://prettier.io/docs/en/install",target:"_blank",rel:"noopener noreferrer"},k={href:"https://stackoverflow.com/a/64507176",target:"_blank",rel:"noopener noreferrer"},_=a(`<ul><li>安装 Prettier。注意要使用 <code>--save-exact</code>：</li></ul><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm i --save-dev --save-exact prettier
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建并配置 <code>.prettierrc.json</code> 文件：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;singleAttributePerLine&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),f=e("code",null,".prettierignore",-1),q={href:"https://git-scm.com/docs/gitignore#_pattern_format",target:"_blank",rel:"noopener noreferrer"},x=e("li",null,"默认忽略 .git 文件夹和 node_modules 文件夹。",-1),y=e("li",null,[n("使用 "),e("code",null,"prettier-ignore"),n(" 忽略一部分文件。")],-1),j=e("h3",{id:"eslint",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eslint","aria-hidden":"true"},"#"),n(" ESLint")],-1),L={href:"https://eslint.org/docs/latest/use/getting-started",target:"_blank",rel:"noopener noreferrer"},P=a(`<ul><li>安装 ESLint：</li></ul><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm init @eslint/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="eslint-config-prettier" tabindex="-1"><a class="header-anchor" href="#eslint-config-prettier" aria-hidden="true">#</a> eslint-config-prettier</h3>`,3),E={href:"https://github.com/prettier/eslint-config-prettier",target:"_blank",rel:"noopener noreferrer"},S=a(`<ul><li><p><code>eslint-config-prettier</code> 的作用是关闭 ESLint 中不必要的和与 Prettier 冲突的规则。</p></li><li><p>安装 <code>eslint-config-prettier</code>：</p></li></ul><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm install --save-dev eslint-config-prettier
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>配置 <code>.eslintrc.json</code>，注意要将 <code>prettier</code> 放在最后：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;some-other-config-you-use&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;prettier&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="eslint-plugin-prettier" tabindex="-1"><a class="header-anchor" href="#eslint-plugin-prettier" aria-hidden="true">#</a> eslint-plugin-prettier</h3>`,5),R={href:"https://github.com/prettier/eslint-plugin-prettier",target:"_blank",rel:"noopener noreferrer"},w=a(`<ul><li><p><code>eslint-plugin-prettier</code> 的作用是将 Prettier 作为 ESLint 的规则，开发者可以在 IDE 上实时看到 Prettier 抛出的错误。</p></li><li><p>安装 <code>eslint-plugin-prettier</code>：</p></li></ul><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm install --save-dev eslint-plugin-prettier
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>配置 <code>.eslintrc.json</code>：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;rules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;prettier/prettier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="git-hooks" tabindex="-1"><a class="header-anchor" href="#git-hooks" aria-hidden="true">#</a> Git Hooks</h3>`,5),N={href:"https://prettier.io/docs/en/install#git-hooks",target:"_blank",rel:"noopener noreferrer"},V=a(`<ul><li><p>提交之前对暂存区中的文件执行 ESLint 和 Prettier。</p></li><li><p>安装 <code>husky</code> 和 <code>lint-staged</code>：</p></li></ul><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm install --save-dev husky lint-staged
npx husky install
npm pkg set scripts.prepare=&quot;husky install&quot;
npx husky add .husky/pre-commit &quot;npx lint-staged&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置 <code>pre-commit</code> 钩子。注意 <code>ESLint</code> 必须放在 <code>Prettier</code> 之前：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;lint-staged&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;src/**/*.js&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;eslint --fix&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;prettier --write&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;src/**/*.{css,less,scss}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;prettier --write&quot;</span> 
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function B(G,I){const s=o("ExternalLinkIcon");return r(),l("div",null,[c,d,e("blockquote",null,[e("p",null,[n("Reference: "),e("a",u,[n("Prettier vs. Linters"),t(s)])])]),v,h,m,e("blockquote",null,[g,e("ul",null,[e("li",null,[e("a",b,[n("prettier install"),t(s)])]),e("li",null,[e("a",k,[n("--save-exact"),t(s)])])])]),_,e("ul",null,[e("li",null,[n("创建并配置 "),f,n(" 文件： "),e("ul",null,[e("li",null,[n("使用 "),e("a",q,[n("gitignore 语法"),t(s)]),n("。")]),x,y])])]),j,e("blockquote",null,[e("p",null,[n("Reference: "),e("a",L,[n("Getting Started with ESLint"),t(s)])])]),P,e("blockquote",null,[e("p",null,[n("Reference: "),e("a",E,[n("eslint-config-prettier"),t(s)])])]),S,e("blockquote",null,[e("p",null,[n("Reference: "),e("a",R,[n("eslint-plugin-prettier"),t(s)])])]),w,e("blockquote",null,[e("p",null,[n("Reference: "),e("a",N,[n("Git Hooks"),t(s)])])]),V])}const H=i(p,[["render",B],["__file","index.html.vue"]]);export{H as default};
