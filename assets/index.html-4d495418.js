import{_ as n,W as o,X as s,Y as e,Z as r,$ as t,a0 as d,C as l}from"./framework-c8ebc670.js";const i="/blog/assets/before-reset-6b66203c.png",c="/blog/assets/soft-option-bffef483.png",h="/blog/assets/mixed-option-c9bbd463.png",g="/blog/assets/hard-option-54dd7b7b.png",u={},p=d('<h1 id="reset" tabindex="-1"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> Reset</h1><h2 id="three-trees" tabindex="-1"><a class="header-anchor" href="#three-trees" aria-hidden="true">#</a> Three Trees</h2><h3 id="the-head" tabindex="-1"><a class="header-anchor" href="#the-head" aria-hidden="true">#</a> The HEAD</h3><blockquote><p>Pro Git: p252</p></blockquote><p>HEAD 指向当前分支的最后一个 commit。</p>',5),f={href:"https://initialcommit.com/blog/what-is-git-head#what-is-git-head",target:"_blank",rel:"noopener noreferrer"},m=d(`<p>使用 <code>cat .git/HEAD</code> 可以查看到 HEAD 指向哪一个分支。</p><h3 id="the-index" tabindex="-1"><a class="header-anchor" href="#the-index" aria-hidden="true">#</a> The Index</h3><p>Index 就是暂存区（staged area）。对在工作目录（working directory）的文件使用 <code>git add</code> 之后，这些文件就会添加到暂存区。</p><h3 id="the-working-directory" tabindex="-1"><a class="header-anchor" href="#the-working-directory" aria-hidden="true">#</a> The Working Directory</h3><p>工作目录（working directory）是编辑文件的地方。</p><h2 id="切换分支时的内部运行" tabindex="-1"><a class="header-anchor" href="#切换分支时的内部运行" aria-hidden="true">#</a> 切换分支时的内部运行</h2><blockquote><p>Pro Git: p259</p></blockquote><ol><li>HEAD 指向切换的分支。</li><li>在 Index 中填充这个分支的所有 commit。</li><li>把 Index 中的内容复制到工作目录。</li></ol><h2 id="命令解释" tabindex="-1"><a class="header-anchor" href="#命令解释" aria-hidden="true">#</a> 命令解释</h2><blockquote><p>Pro Git: p259</p></blockquote><p>HEAD 指向分支，分支指向 commit。reset 就是让 HEAD 指向的分支进行移动。</p><h2 id="soft-选项" tabindex="-1"><a class="header-anchor" href="#soft-选项" aria-hidden="true">#</a> Soft 选项</h2><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git reset --soft &lt;commit&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>HEAD~</code> 表示向前回退一位</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git reset --soft HEAD~
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3><ul><li>本地仓库（HEAD）重置。</li><li>暂存区（Index）和工作目录（working directory）不重置。</li><li>使用 <code>git commit</code> 命令可以让本地仓库、暂存区和工作目录保持一致。</li></ul><h3 id="图示" tabindex="-1"><a class="header-anchor" href="#图示" aria-hidden="true">#</a> 图示</h3><ul><li>使用 reset 之前三个地方都是相同的（v3）：</li></ul><figure><img src="`+i+'" alt="图示-使用 reset 之前" tabindex="0" loading="lazy"><figcaption>图示-使用 reset 之前</figcaption></figure><ul><li>使用 reset --soft 之后本地仓库（HEAD）重置（v2），暂存区（Index）和工作目录（Working Directory）保持原样（v3）：</li></ul><figure><img src="'+c+`" alt="图示-使用 reset 之后" tabindex="0" loading="lazy"><figcaption>图示-使用 reset 之后</figcaption></figure><h2 id="mixed-选项" tabindex="-1"><a class="header-anchor" href="#mixed-选项" aria-hidden="true">#</a> Mixed 选项</h2><h3 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1" aria-hidden="true">#</a> 使用</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git reset --mixed &lt;commit&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>--mixed</code> 是 <code>reset</code> 命令的默认选项。</p></div><h3 id="特点-1" tabindex="-1"><a class="header-anchor" href="#特点-1" aria-hidden="true">#</a> 特点</h3><ul><li>本地仓库（HEAD）和暂存区（Index）重置。</li><li>工作目录（working directory）不重置。</li><li>使用 <code>git add</code> 和 <code>git commit</code> 命令可以让本地仓库、暂存区和工作目录保持一致。</li></ul><h3 id="图示-1" tabindex="-1"><a class="header-anchor" href="#图示-1" aria-hidden="true">#</a> 图示</h3><ul><li>使用 reset 之前三个地方都是相同的（v3）：</li></ul><figure><img src="`+i+'" alt="图示-使用 reset 之前" tabindex="0" loading="lazy"><figcaption>图示-使用 reset 之前</figcaption></figure><ul><li>使用 reset --mixed 之后本地仓库（HEAD）和暂存区（Index）重置（v2），工作目录（Working Directory）保持原样（v3）：</li></ul><figure><img src="'+h+`" alt="图示-使用 reset 之后" tabindex="0" loading="lazy"><figcaption>图示-使用 reset 之后</figcaption></figure><h2 id="hard-选项" tabindex="-1"><a class="header-anchor" href="#hard-选项" aria-hidden="true">#</a> Hard 选项</h2><h3 id="使用-2" tabindex="-1"><a class="header-anchor" href="#使用-2" aria-hidden="true">#</a> 使用</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git reset --hard &lt;commit&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="特点-2" tabindex="-1"><a class="header-anchor" href="#特点-2" aria-hidden="true">#</a> 特点</h3><ul><li>本地仓库（HEAD）、暂存区（Index）和工作目录（Working Directory）重置。</li></ul><div class="hint-container danger"><p class="hint-container-title">警告</p><p>使用 <code>git reset --hard</code> 后无法通过 <code>git log</code> 查找到丢失的 commit，但是可以使用 <code>git reflog</code> 查看 HEAD 的变更情况，从而回滚到之前的 commit。</p></div><h3 id="图示-2" tabindex="-1"><a class="header-anchor" href="#图示-2" aria-hidden="true">#</a> 图示</h3><ul><li>使用 reset 之前三个地方都是相同的（v3）：</li></ul><figure><img src="`+i+'" alt="图示-使用 reset 之前" tabindex="0" loading="lazy"><figcaption>图示-使用 reset 之前</figcaption></figure><ul><li>使用 reset --hard 之后本地仓库（HEAD）、暂存区（Index）和工作目录（Working Directory）重置（v2）：</li></ul><figure><img src="'+g+'" alt="图示-使用 reset 之后" tabindex="0" loading="lazy"><figcaption>图示-使用 reset 之后</figcaption></figure><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>',45),b={href:"https://a.co/d/hzFin1j",target:"_blank",rel:"noopener noreferrer"};function x(v,_){const a=l("ExternalLinkIcon");return o(),s("div",null,[p,e("blockquote",null,[e("p",null,[e("a",f,[r("Blog"),t(a)])])]),m,e("ul",null,[e("li",null,[e("a",b,[r("Pro Git"),t(a)])])])])}const D=n(u,[["render",x],["__file","index.html.vue"]]);export{D as default};
