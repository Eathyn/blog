import{_ as r,W as l,X as t,Y as e,Z as a,$ as o,a0 as i,C as s}from"./framework-0d71bc9d.js";const c={},d=i('<h1 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化" aria-hidden="true">#</a> 性能优化</h1><ul><li>启动性能：让用户可以更快地打开并看到小程序。</li><li>运行时性能：让用户能够流畅地使用小程序。</li></ul><h2 id="启动性能" tabindex="-1"><a class="header-anchor" href="#启动性能" aria-hidden="true">#</a> 启动性能</h2><ul><li>小程序启动指的是用户打开小程序到首页渲染完成，首页渲染完成的标志是首个页面的 onReady 事件被触发。</li></ul><h3 id="代码包体积优化" tabindex="-1"><a class="header-anchor" href="#代码包体积优化" aria-hidden="true">#</a> 代码包体积优化</h3>',5),h={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start_optimizeA.html",target:"_blank",rel:"noopener noreferrer"},_=e("ul",null,[e("li",null,"拆分主包、分包预下载、分包异步化。"),e("li",null,"如果自定义组件和插件只是在少数页面中使用，则应该在页面的 json 文件中配置，而不是在 app.json 中配置。在 app.json 中配置的自定义组件和插件会随着主包一起下载和注入 JS 代码。"),e("li",null,"项目中的多媒体文件会占用包体积，最后通过 URL 的方式引入。"),e("li",null,"利用打包工具的 tree-shaking 特性去除无依赖代码。")],-1);function u(p,f){const n=s("ExternalLinkIcon");return l(),t("div",null,[d,e("blockquote",null,[e("p",null,[a("Reference: "),e("a",h,[a("代码包体积优化"),o(n)])])]),_])}const x=r(c,[["render",u],["__file","index.html.vue"]]);export{x as default};
