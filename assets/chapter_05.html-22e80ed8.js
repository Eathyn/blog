const e=JSON.parse('{"key":"v-32b44c08","path":"/front_end/typescript/book-learning_typescript/chapter_05.html","title":"Function","lang":"zh-CN","frontmatter":{"date":"2022-10-23T00:00:00.000Z","category":"TypeScript","tag":["Book - Learning TypeScript","chapter 05"],"description":"Function Function Parameters TypeScript will infer the type of parameter to any if no type annotation for parameter. // a: any function f(a) {}","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/front_end/typescript/book-learning_typescript/chapter_05.html"}],["meta",{"property":"og:title","content":"Function"}],["meta",{"property":"og:description","content":"Function Function Parameters TypeScript will infer the type of parameter to any if no type annotation for parameter. // a: any function f(a) {}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-12T13:42:19.000Z"}],["meta",{"property":"article:tag","content":"Book - Learning TypeScript"}],["meta",{"property":"article:tag","content":"chapter 05"}],["meta",{"property":"article:published_time","content":"2022-10-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-12T13:42:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-12T13:42:19.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Function Parameters","slug":"function-parameters","link":"#function-parameters","children":[{"level":3,"title":"Required Parameters","slug":"required-parameters","link":"#required-parameters","children":[]},{"level":3,"title":"Optional Parameters","slug":"optional-parameters","link":"#optional-parameters","children":[]},{"level":3,"title":"Default Parameters","slug":"default-parameters","link":"#default-parameters","children":[]},{"level":3,"title":"Rest Parameters","slug":"rest-parameters","link":"#rest-parameters","children":[]}]},{"level":2,"title":"Return Types","slug":"return-types","link":"#return-types","children":[{"level":3,"title":"Explicit Return Types","slug":"explicit-return-types","link":"#explicit-return-types","children":[]}]},{"level":2,"title":"Function Types","slug":"function-types","link":"#function-types","children":[{"level":3,"title":"Function Type Parentheses","slug":"function-type-parentheses","link":"#function-type-parentheses","children":[]},{"level":3,"title":"Parameter Type Inferences","slug":"parameter-type-inferences","link":"#parameter-type-inferences","children":[]},{"level":3,"title":"Function Type Aliases","slug":"function-type-aliases","link":"#function-type-aliases","children":[]}]},{"level":2,"title":"More Return Types","slug":"more-return-types","link":"#more-return-types","children":[{"level":3,"title":"Void Returns","slug":"void-returns","link":"#void-returns","children":[]},{"level":3,"title":"Never Returns","slug":"never-returns","link":"#never-returns","children":[]}]},{"level":2,"title":"Function Overloads","slug":"function-overloads","link":"#function-overloads","children":[{"level":3,"title":"Call-Signature Compatibility","slug":"call-signature-compatibility","link":"#call-signature-compatibility","children":[]}]}],"git":{"createdTime":1681306939000,"updatedTime":1681306939000,"contributors":[{"name":"Eathyn","email":"eathynzakas@gmail.com","commits":1}]},"readingTime":{"minutes":3.32,"words":995},"filePathRelative":"front_end/typescript/book-learning_typescript/chapter_05.md","localizedDate":"2022年10月23日","excerpt":"<h1> Function</h1>\\n<h2> Function Parameters</h2>\\n<ul>\\n<li>TypeScript will infer the type of parameter to <code>any</code> if no type annotation for parameter.</li>\\n</ul>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// a: any</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
