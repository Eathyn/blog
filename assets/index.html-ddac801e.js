import{_ as t,W as s,X as l,Y as e,Z as a,$ as n,a0 as r,C as d}from"./framework-0d71bc9d.js";const o="/blog/assets/init-11e51b81.png",c="/blog/assets/feature-start-3aeed745.png",g="/blog/assets/feature-end-940c055f.png",f="/blog/assets/feature-start-manually-498b5d9c.png",u="/blog/assets/feature-end-manually-0776b5fe.png",m="/blog/assets/release-start-846077a1.png",v="/blog/assets/release-end-2f0dc1e0.png",h="/blog/assets/release-end-merge-message-00a6f70d.png",p="/blog/assets/release-end-tag-3894bc3c.png",b="/blog/assets/hotfix-start-d4e21fb3.png",x="/blog/assets/hotfix-finish-749b1f6d.png",_="/blog/assets/hotfix-finish-merge-message-030d2b17.png",w="/blog/assets/hotfix-finish-tag-into-main-688951a8.png",k="/blog/assets/hotfix-finish-tag-into-develop-5ebbe8f7.png",y={},z=r('<h1 id="git-flow" tabindex="-1"><a class="header-anchor" href="#git-flow" aria-hidden="true">#</a> Git Flow</h1><h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h2><ul><li>使用 <code>git flow init</code> 命令初始化项目，同时设置分支名称和前缀：</li></ul><figure><img src="'+o+`" alt="初始化" tabindex="0" loading="lazy"><figcaption>初始化</figcaption></figure><ul><li><code>main</code> 分支用于发布线上版本，<code>develop</code> 分支用于整合 feature 分支。</li></ul><h2 id="feature-分支" tabindex="-1"><a class="header-anchor" href="#feature-分支" aria-hidden="true">#</a> Feature 分支</h2><p>feature 分支的父分支是 develop 分支。feature 分支完成后合并到 develop 分支：</p><h3 id="使用-git-flow-命令" tabindex="-1"><a class="header-anchor" href="#使用-git-flow-命令" aria-hidden="true">#</a> 使用 Git flow 命令</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code><span class="token comment"># 从 develop 分支中开辟新的 feature 分支。feature-branch 不需要加 \`feature/\` 前缀</span>
git flow feature start &lt;feature-branch&gt;

<span class="token comment"># 将新的 feature 分支合并到 develop 分支。feature-branch 不需要加 \`feature/\` 前缀</span>
git flow feature finish -k &lt;feature-branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+c+'" alt="建立 feature 分支" tabindex="0" loading="lazy"><figcaption>建立 feature 分支</figcaption></figure><figure><img src="'+g+`" alt="合并 feature 分支" tabindex="0" loading="lazy"><figcaption>合并 feature 分支</figcaption></figure><div class="hint-container danger"><p class="hint-container-title">警告</p><p>执行 <code>git flow feature finish &lt;feature-branch&gt;</code> 后，新建立的 feature 分支会被删除，如果不想自动删除，则应该增加 <code>-k</code> 参数：</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git flow feature finish -k &lt;feature-branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h3 id="不使用-git-flow-命令" tabindex="-1"><a class="header-anchor" href="#不使用-git-flow-命令" aria-hidden="true">#</a> 不使用 Git flow 命令</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code><span class="token comment"># 切换到 develop 分支</span>
git switch develop

<span class="token comment"># 从 develop 分支开辟 feature 分支。需要加 feature/ 前缀。</span>
git branch feature/&lt;feature-branch&gt;

<span class="token comment"># 切换到 feature 分支并进行开发</span>
git switch feature/&lt;feature-branch&gt;

<span class="token comment"># 切换到 develop 分支，合并 feature 分支</span>
git switch develop
git merge feature/&lt;feature-branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+f+'" alt="手动建立 feature 分支" tabindex="0" loading="lazy"><figcaption>手动建立 feature 分支</figcaption></figure><figure><img src="'+u+`" alt="手动合并 feature 分支" tabindex="0" loading="lazy"><figcaption>手动合并 feature 分支</figcaption></figure><h2 id="release-分支" tabindex="-1"><a class="header-anchor" href="#release-分支" aria-hidden="true">#</a> Release 分支</h2><ul><li>当功能开发完毕并且 feature 分支合并到 develop 分支后，应该从 develop 分支开辟 release 分支，将 release 分支放到预发布环境，让测试部门到预发布环境再进行测试。</li><li>release 原则上不可以再添加新功能，只能进行修复 bug，生成文档等事情。</li><li>如果要 release 分支上进行的任务都已经完成，就把 release 分支合并到 main 分支和 develop 分支。合并到 main 分支是为了上线，合并到 develop 分支是因为 release 分支可能有新的 commit，要将这些 commit 也同步到 develop 分支。</li><li>release 分支的名称可以是 tag。</li></ul><h3 id="使用-git-flow-命令-1" tabindex="-1"><a class="header-anchor" href="#使用-git-flow-命令-1" aria-hidden="true">#</a> 使用 Git flow 命令</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code><span class="token comment"># 从 develop 分支开辟 release 分支</span>
git flow release start &lt;release-branch&gt;

<span class="token comment"># 将 release 分支合并到 main 分支和 develop 分支</span>
git flow release finish -k &lt;release-branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+m+'" alt="建立 release 分支" tabindex="0" loading="lazy"><figcaption>建立 release 分支</figcaption></figure><figure><img src="'+v+'" alt="合并 release 分支到 main 和 develop 分支" tabindex="0" loading="lazy"><figcaption>合并 release 分支到 main 和 develop 分支</figcaption></figure><figure><img src="'+h+'" alt="编写合并的 commit message" tabindex="0" loading="lazy"><figcaption>编写合并的 commit message</figcaption></figure><figure><img src="'+p+`" alt="编写 tag" tabindex="0" loading="lazy"><figcaption>编写 tag</figcaption></figure><div class="hint-container danger"><p class="hint-container-title">警告</p><p>执行 <code>git flow release finish &lt;release-branch&gt;</code> 后，新建立的 release 分支会被删除，如果不想自动删除，则应该增加 <code>-k</code> 参数：</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git flow release finish -k &lt;release-branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h3 id="不使用-git-flow-命令-1" tabindex="-1"><a class="header-anchor" href="#不使用-git-flow-命令-1" aria-hidden="true">#</a> 不使用 Git flow 命令</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code><span class="token comment"># 从 develop 分支开辟 release 分支</span>
git branch &lt;release-branch&gt;

<span class="token comment"># 切换到 release 分支并修复 bug</span>
git switch &lt;release-branch&gt;

<span class="token comment"># 修复 bug 完成之后将 release 分支合并到 main 分支和 develop 分支，并在 main 分支上打 tag</span>
(main) git merge &lt;release-branch&gt;
(main) git tag &lt;version&gt;
(develop) git merge &lt;release-branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hotfix-分支" tabindex="-1"><a class="header-anchor" href="#hotfix-分支" aria-hidden="true">#</a> Hotfix 分支</h2><ul><li>hotfix 分支用于修复线上 bug。</li><li>hotfix 分支的父分支为 main 分支。</li><li>在 hotfix 分支上修复 bug 之后要将其合并到 main 和 develop 分支上（可能需要手动合并到 release）。</li><li>hotfix 分支合并到 main 分支之后，要在 main 分支上打 tag。</li></ul><h3 id="使用-git-flow-命令-2" tabindex="-1"><a class="header-anchor" href="#使用-git-flow-命令-2" aria-hidden="true">#</a> 使用 Git flow 命令</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code><span class="token comment"># 从 main 分支开辟 hotfix 分支</span>
git flow hotfix start &lt;hotfix-branch&gt;

<span class="token comment"># 修复 bug 之后将 hotfix 分支合并到 main 分支和 develop 分支，并给 main 分支打 tag</span>
git flow hotfix finish -k &lt;hotfix-branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+b+'" alt="建立 hotfix 分支" tabindex="0" loading="lazy"><figcaption>建立 hotfix 分支</figcaption></figure><figure><img src="'+x+'" alt="合并 hotfix 分支" tabindex="0" loading="lazy"><figcaption>合并 hotfix 分支</figcaption></figure><figure><img src="'+_+'" alt="编写合并到 main 分支的 commit message" tabindex="0" loading="lazy"><figcaption>编写合并到 main 分支的 commit message</figcaption></figure><figure><img src="'+w+'" alt="给 main 分支打 tag" tabindex="0" loading="lazy"><figcaption>给 main 分支打 tag</figcaption></figure><figure><img src="'+k+`" alt="把 tag 合并到 develop 分支" tabindex="0" loading="lazy"><figcaption>把 tag 合并到 develop 分支</figcaption></figure><h3 id="不使用-git-flow-命令-2" tabindex="-1"><a class="header-anchor" href="#不使用-git-flow-命令-2" aria-hidden="true">#</a> 不使用 Git flow 命令</h3><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code><span class="token comment"># 从 main 分支开辟 hotfix 分支并切换</span>
(main) git branch &lt;hotfix-branch&gt;
(main) git switch &lt;hotfix-branch&gt;

<span class="token comment"># 修复完 bug 之后将 hotfix 分支合并到 main 和 develop 分支，并打 tag</span>
(main) git merge &lt;hotfix-branch&gt;
(main) git tag &lt;version&gt;
(develop) git merge &lt;hotfix-branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>`,39),G={href:"https://github.com/nvie/gitflow",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow",target:"_blank",rel:"noopener noreferrer"};function V(B,E){const i=d("ExternalLinkIcon");return s(),l("div",null,[z,e("ul",null,[e("li",null,[e("a",G,[a("gitflow repo"),n(i)])]),e("li",null,[e("a",N,[a("beginner"),n(i)])])])])}const F=t(y,[["render",V],["__file","index.html.vue"]]);export{F as default};
