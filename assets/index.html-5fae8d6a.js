import{_ as s,W as i,X as c,Y as e,Z as o,$ as a,a0 as t,C as l}from"./framework-0d71bc9d.js";const r={},d=t('<h1 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> Cookie</h1><h2 id="definition" tabindex="-1"><a class="header-anchor" href="#definition" aria-hidden="true">#</a> Definition</h2><ul><li>cookie 是服务器发送给浏览器的键值对，存储在浏览器。</li></ul><h2 id="role" tabindex="-1"><a class="header-anchor" href="#role" aria-hidden="true">#</a> Role</h2>',4),p=e("p",null,"Ref:",-1),h={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",target:"_blank",rel:"noopener noreferrer"},u={href:"https://http.dev/cookies#usage",target:"_blank",rel:"noopener noreferrer"},k=e("ul",null,[e("li",null,"追踪（Tracking）：记录和分析用户行为。"),e("li",null,"会话管理（Session Management）：HTTP 是无状态的协议，cookie 可用于记录登录状态等。"),e("li",null,"个性化（Personalization）：记录用户喜好、主题和其他设置。")],-1),_=e("h2",{id:"access",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#access","aria-hidden":"true"},"#"),o(" Access")],-1),m={href:"https://javascript.info/cookie#reading-from-document-cookie",target:"_blank",rel:"noopener noreferrer"},f=t('<ul><li>获取 cookie：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>写入 cookie：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token string">&#39;name&#39;</span>\n<span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token string">&#39;Eathyn&#39;</span>\ndocument<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>每个 cookie 键值对的大小不可以超过 4KB。</li></ul><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2><h3 id="path" tabindex="-1"><a class="header-anchor" href="#path" aria-hidden="true">#</a> path</h3>',7),b=e("p",null,"Ref:",-1),g={href:"https://javascript.info/cookie#path",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#:~:text=mozilla.org.-,Path%20attribute,-The%20Path%20attribute",target:"_blank",rel:"noopener noreferrer"},v=t('<ul><li><p>如果当前路径不匹配 <code>path</code> 选项，那么该 cookie 无法保存到浏览器，也不会作为 Cookie 请求头发送给服务器。</p></li><li><p>如果 <code>path=/docs</code>，那么 <code>/docs</code>, <code>/docs/</code>, <code>/docs/web</code> 都匹配。</p></li></ul><h3 id="domain" tabindex="-1"><a class="header-anchor" href="#domain" aria-hidden="true">#</a> domain</h3>',2),C={href:"https://javascript.info/cookie#domain",target:"_blank",rel:"noopener noreferrer"},T=t('<ul><li><p>cookie 无法被其他二级域名获取。例如：<code>a.com</code> 中的 cookie 无法被 <code>b.com</code> 获取。</p></li><li><p>默认情况下，cookie 无法被子域获取。例如：<code>a.com</code> 中的 cookie 无法被 <code>test.a.com</code> 获取。</p></li><li><p>将 <code>domain</code> 选项设置为根域（root domain），那么 cookie 就可以被自域获取。例如：设置 <code>domain=a.com</code> 之后，<code>a.com</code> 中的 cookie 可以被 <code>test.a.com</code> 获取。</p></li></ul><h3 id="expires-max-age" tabindex="-1"><a class="header-anchor" href="#expires-max-age" aria-hidden="true">#</a> expires, max-age</h3>',2),j=e("p",null,"Ref:",-1),R={href:"https://javascript.info/cookie#expires-max-age",target:"_blank",rel:"noopener noreferrer"},y={href:"https://stackoverflow.com/a/10772420",target:"_blank",rel:"noopener noreferrer"},P=t('<ul><li><p>没有设置 <code>expires</code> 和 <code>max-age</code> 的 cookie 称为 session cookie，特点是浏览器关闭后 cookie 就会被删除。</p></li><li><p>设置 <code>expires</code> 和 <code>max-age</code> 之后，关闭浏览器 cookie 在过期之前不会被删除。</p></li><li><p>如果将浏览器的启动时的选项设置为继续浏览上次打开的网页，那么关闭浏览器后 session cookie 不会自动删除。</p></li><li><p>将 <code>expires</code> 设置为过去的时间或者将 <code>max-age</code> 设置为零或负数，就可以删除 cookie。</p></li></ul><h3 id="secure" tabindex="-1"><a class="header-anchor" href="#secure" aria-hidden="true">#</a> secure</h3><h3 id="samesite" tabindex="-1"><a class="header-anchor" href="#samesite" aria-hidden="true">#</a> samesite</h3><h3 id="http-only" tabindex="-1"><a class="header-anchor" href="#http-only" aria-hidden="true">#</a> http-only</h3><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2>',5),w=e("p",null,"Ref:",-1),q={href:"https://www.section.io/engineering-education/what-are-cookies-nodejs/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/Eathyn/authentication/tree/cookie",target:"_blank",rel:"noopener noreferrer"};function H(z,B){const n=l("ExternalLinkIcon");return i(),c("div",null,[d,e("blockquote",null,[p,e("ul",null,[e("li",null,[e("a",h,[o("HTTP Cookie"),a(n)])]),e("li",null,[e("a",u,[o("HTTP Cookie"),a(n)])])])]),k,_,e("blockquote",null,[e("p",null,[o("Ref: "),e("a",m,[o("Access Cookie"),a(n)])])]),f,e("blockquote",null,[b,e("ul",null,[e("li",null,[e("a",g,[o("path Option"),a(n)])]),e("li",null,[e("a",x,[o("path Option"),a(n)])])])]),v,e("blockquote",null,[e("p",null,[o("Ref: "),e("a",C,[o("domain Option"),a(n)])])]),T,e("blockquote",null,[j,e("ul",null,[e("li",null,[e("a",R,[o("expires, max-age options"),a(n)])]),e("li",null,[e("a",y,[o("Chrome doesn't delete session cookies"),a(n)])])])]),P,e("blockquote",null,[w,e("ul",null,[e("li",null,[e("a",q,[o("Cookie Practice"),a(n)])]),e("li",null,[e("a",E,[o("Repo"),a(n)])])])])])}const N=s(r,[["render",H],["__file","index.html.vue"]]);export{N as default};
