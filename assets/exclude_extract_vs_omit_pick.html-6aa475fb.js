import{_ as e,W as t,X as o,Y as s,Z as n,$ as p,a0 as c,C as l}from"./framework-0d71bc9d.js";const i={},r=s("h1",{id:"exclude-vs-omit-extract-vs-pick",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#exclude-vs-omit-extract-vs-pick","aria-hidden":"true"},"#"),n(" Exclude vs Omit | Extract vs Pick")],-1),d={href:"https://timmousk.com/blog/typescript-omit/",target:"_blank",rel:"noopener noreferrer"},k=s("code",null,"Omit",-1),u=s("code",null,"Exclude",-1),m=c(`<h2 id="类型不同" tabindex="-1"><a class="header-anchor" href="#类型不同" aria-hidden="true">#</a> 类型不同</h2><ul><li><code>Exclude</code> 和 <code>Extract</code> 创建一个新类型，并删除或提取<strong>联合</strong>类型中的某些类型；<code>Omit</code> 或 <code>Pick</code> 创建一个新类型，并删除或挑选<strong>对象类型</strong>中的某些属性。</li></ul><p><em>Exclude and Extract</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Country</span> <span class="token operator">=</span> <span class="token string">&#39;China&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;Korea&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;Japan&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">CountryWithoutJapan</span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span>Country<span class="token punctuation">,</span> <span class="token string">&#39;Japan&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// &quot;China&quot; | &quot;Korea&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">CountryOnlyChina</span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span>Country<span class="token punctuation">,</span> <span class="token string">&#39;China&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// &quot;China&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Omit and Pick</em></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">PersonWithoutAge</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>Person<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// {name: string}</span>
<span class="token keyword">type</span> <span class="token class-name">PersonWithName</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>Person<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// {name: string}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="enum" tabindex="-1"><a class="header-anchor" href="#enum" aria-hidden="true">#</a> Enum</h2><ul><li>在枚举上可以使用 <code>Exclude</code> 和 <code>Extract</code>，不可使用 <code>Omit</code> 和 <code>Pick</code>。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
  <span class="token constant">UP</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">RIGHT</span><span class="token punctuation">,</span>
  <span class="token constant">BOTTOM</span><span class="token punctuation">,</span>
  <span class="token constant">LEFT</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">WithoutUpDirection</span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span>Direction<span class="token punctuation">,</span> Direction<span class="token punctuation">.</span><span class="token constant">UP</span><span class="token operator">&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">WithUpDirection</span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span>Direction<span class="token punctuation">,</span> Direction<span class="token punctuation">.</span><span class="token constant">UP</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组成关系" tabindex="-1"><a class="header-anchor" href="#组成关系" aria-hidden="true">#</a> 组成关系</h2><ul><li><code>Omit</code> 由 <code>Pick</code> 和 <code>Exclude</code> 组成。</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Exclude<span class="token operator">&lt;</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">PersonOnlyName1</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>Person<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// {name: string}</span>

<span class="token keyword">type</span> <span class="token class-name">PersonOnlyName2</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>Person<span class="token punctuation">,</span> Exclude<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Person<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;&gt;</span> <span class="token comment">// {name: string}</span>
<span class="token comment">// 1. keyof Person -&gt; &#39;name&#39; | &#39;age&#39;</span>
<span class="token comment">// 2. Exclude&lt;keyof Person, &#39;age&#39;&gt; -&gt; &#39;name&#39;</span>
<span class="token comment">// 3. Pick&lt;Person, Exclude&lt;keyof Person, &#39;age&#39;&gt;&gt; -&gt; Pick&lt;&#39;name&#39; | &#39;age&#39;, &#39;name&#39;&gt; -&gt; {name: string}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function v(g,b){const a=l("ExternalLinkIcon");return t(),o("div",null,[r,s("blockquote",null,[s("p",null,[n("Reference: "),s("a",d,[n("Difference between "),k,n(" and "),u,p(a)])])]),m])}const h=e(i,[["render",v],["__file","exclude_extract_vs_omit_pick.html.vue"]]);export{h as default};
