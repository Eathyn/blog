import{_ as d,W as v,X as k,Y as s,Z as n,$ as a,a1 as e,a0 as t,C as p}from"./framework-0d71bc9d.js";const m={},h=s("h1",{id:"postcss",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#postcss","aria-hidden":"true"},"#"),n(" PostCSS")],-1),b=s("h2",{id:"introduce",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#introduce","aria-hidden":"true"},"#"),n(" Introduce")],-1),g={href:"https://github.com/postcss/postcss#postcss",target:"_blank",rel:"noopener noreferrer"},_=t(`<ul><li>PostCSS 通过插件来转换样式。常见的功能有检测和修改样式风格、转译 CSS 新特性等。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>
          <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span>
          <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="autoprefixer" tabindex="-1"><a class="header-anchor" href="#autoprefixer" aria-hidden="true">#</a> Autoprefixer</h2>`,3),x={href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"},f=t(`<h3 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h3><ul><li>为 CSS 属性添加浏览器供应商前缀。</li><li>不添加 polyfills。</li></ul><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm i --save-dev autoprefixer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// postcss.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;autoprefixer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y={class:"hint-container tip"},S=s("p",{class:"hint-container-title"},"提示",-1),j=s("h3",{id:"效果",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#效果","aria-hidden":"true"},"#"),n(" 效果")],-1),C=s("div",{class:"language-css line-numbers-mode","data-ext":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"token selector"},"::placeholder"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" gray"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),w=s("div",{class:"language-css line-numbers-mode","data-ext":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"token selector"},"::-webkit-input-placeholder"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" gray"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`

`),s("span",{class:"token selector"},"::-moz-placeholder"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" gray"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`

`),s("span",{class:"token selector"},"::placeholder"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" gray"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),E=t(`<h2 id="postcss-preset-env" tabindex="-1"><a class="header-anchor" href="#postcss-preset-env" aria-hidden="true">#</a> PostCSS Preset Env</h2><h3 id="作用-1" tabindex="-1"><a class="header-anchor" href="#作用-1" aria-hidden="true">#</a> 作用</h3><ul><li>将较新的 CSS 特性转化为浏览器可以识别的特性。</li><li>根据 Browserslist 生成的目标浏览器添加合适的 polyfills。</li></ul><h3 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h3><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm i --save-dev postcss-preset-env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置-1" tabindex="-1"><a class="header-anchor" href="#配置-1" aria-hidden="true">#</a> 配置</h3>`,6),A=s("li",null,[s("code",null,"postcss-preset-env"),n(" 包含 "),s("code",null,"autoprefixer"),n("，所以配置了 "),s("code",null,"postcss-preset-env"),n(" 就不需要再配置 "),s("code",null,"autoprefixer"),n("。")],-1),B=s("code",null,"postcss-preset-env",-1),P={href:"https://github.com/csstools/postcss-plugins/blob/main/plugin-packs/postcss-preset-env/README.md#options",target:"_blank",rel:"noopener noreferrer"},R=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// postcss.config.js</span>
<span class="token keyword">const</span> postcssPresetEnv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;postcss-preset-env&#39;</span><span class="token punctuation">)</span>

<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;postcss-load-config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Config<span class="token punctuation">}</span></span> */</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">postcssPresetEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="效果-1" tabindex="-1"><a class="header-anchor" href="#效果-1" aria-hidden="true">#</a> 效果</h3>`,2),q=s("div",{class:"language-css line-numbers-mode","data-ext":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"token atrule"},[s("span",{class:"token rule"},"@custom-selector"),n(),s("span",{class:"token punctuation"},":"),n("--heading h1"),s("span",{class:"token punctuation"},","),n(" h2"),s("span",{class:"token punctuation"},","),n(" h3"),s("span",{class:"token punctuation"},";")]),n(`

`),s("span",{class:"token selector"},":--heading"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" red"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),L=s("div",{class:"language-css line-numbers-mode","data-ext":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"token selector"},"h1, h2, h3"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),n(" red"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1);function N(V,D){const o=p("ExternalLinkIcon"),u=p("RouterLink"),r=p("CodeTabs");return v(),k("div",null,[h,b,s("blockquote",null,[s("p",null,[n("Reference: "),s("a",g,[n("Docs"),a(o)])])]),_,s("blockquote",null,[s("p",null,[n("Reference: "),s("a",x,[n("Docs"),a(o)])])]),f,s("div",y,[S,s("ul",null,[s("li",null,[n("Autoprefixer 使用 Browserslist，所以需要"),a(u,{to:"/front_end/engineering/browserslist/"},{default:e(()=>[n("配置 Browserslist")]),_:1}),n("。")])])]),j,a(r,{id:"62",data:[{title:"input"},{title:"output"}]},{tab0:e(({title:l,value:c,isActive:i})=>[C]),tab1:e(({title:l,value:c,isActive:i})=>[w]),_:1}),E,s("ul",null,[A,s("li",null,[B,n(" 的 "),s("a",P,[n("选项"),a(o)]),n("。")])]),R,a(r,{id:"111",data:[{title:"input"},{title:"output"}]},{tab0:e(({title:l,value:c,isActive:i})=>[q]),tab1:e(({title:l,value:c,isActive:i})=>[L]),_:1})])}const T=d(m,[["render",N],["__file","index.html.vue"]]);export{T as default};
