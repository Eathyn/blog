const e=JSON.parse('{"key":"v-6d7ad88e","path":"/front_end/javascript/shallow_and_deep_copy/","title":"Shallow and Deep Copy","lang":"zh-CN","frontmatter":{"date":"2023-06-18T00:00:00.000Z","category":"JavaScript","description":"Shallow and Deep Copy Shallow Copy Definition 如果属性值是原始值类型，则复制原始值；如果属性值是对象类型，则复制堆内存地址 shallow copy Spread Syntax (object / array) object const obj1 = { a: { b: 1 } } const obj2 = { ...obj1 } console.log(obj1.a === obj2.a) // true","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/front_end/javascript/shallow_and_deep_copy/"}],["meta",{"property":"og:title","content":"Shallow and Deep Copy"}],["meta",{"property":"og:description","content":"Shallow and Deep Copy Shallow Copy Definition 如果属性值是原始值类型，则复制原始值；如果属性值是对象类型，则复制堆内存地址 shallow copy Spread Syntax (object / array) object const obj1 = { a: { b: 1 } } const obj2 = { ...obj1 } console.log(obj1.a === obj2.a) // true"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://eathyn.github.io/blog/blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Shallow and Deep Copy"}],["meta",{"property":"article:published_time","content":"2023-06-18T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Shallow and Deep Copy\\",\\"image\\":[\\"https://eathyn.github.io/blog/blog/\\"],\\"datePublished\\":\\"2023-06-18T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Shallow Copy","slug":"shallow-copy","link":"#shallow-copy","children":[{"level":3,"title":"Definition","slug":"definition","link":"#definition","children":[]},{"level":3,"title":"Spread Syntax (object / array)","slug":"spread-syntax-object-array","link":"#spread-syntax-object-array","children":[]},{"level":3,"title":"Rest Parameter (object / array)","slug":"rest-parameter-object-array","link":"#rest-parameter-object-array","children":[]},{"level":3,"title":"Object.assign() (object / array)","slug":"object-assign-object-array","link":"#object-assign-object-array","children":[]}]},{"level":2,"title":"Deep Copy","slug":"deep-copy","link":"#deep-copy","children":[{"level":3,"title":"Definition","slug":"definition-1","link":"#definition-1","children":[]},{"level":3,"title":"StructuredClone() [object / array]","slug":"structuredclone-object-array","link":"#structuredclone-object-array","children":[]},{"level":3,"title":"Lodash","slug":"lodash","link":"#lodash","children":[]},{"level":3,"title":"Implement Deep Copy","slug":"implement-deep-copy","link":"#implement-deep-copy","children":[]}]},{"level":2,"title":"Refs","slug":"refs","link":"#refs","children":[]}],"git":{},"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"front_end/javascript/shallow_and_deep_copy/index.md","localizedDate":"2023年6月18日","excerpt":"<h1> Shallow and Deep Copy</h1>\\n<h2> Shallow Copy</h2>\\n<h3> Definition</h3>\\n<ul>\\n<li>如果属性值是原始值类型，则复制原始值；如果属性值是对象类型，则复制堆内存地址</li>\\n</ul>\\n<figure><figcaption>shallow copy</figcaption></figure>\\n<h3> Spread Syntax (object / array)</h3>\\n<p><em>object</em></p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> obj1 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">a</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">b</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">const</span> obj2 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token operator\\">...</span>obj1 <span class=\\"token punctuation\\">}</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>obj1<span class=\\"token punctuation\\">.</span>a <span class=\\"token operator\\">===</span> obj2<span class=\\"token punctuation\\">.</span>a<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// true</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
