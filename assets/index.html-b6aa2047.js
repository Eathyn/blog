import{_ as a,W as t,X as e,Y as n,Z as p,$ as o,a0 as c,C as i}from"./framework-0d71bc9d.js";const l={},u=c(`<h1 id="scroll-skills" tabindex="-1"><a class="header-anchor" href="#scroll-skills" aria-hidden="true">#</a> Scroll Skills</h1><h2 id="分页加载" tabindex="-1"><a class="header-anchor" href="#分页加载" aria-hidden="true">#</a> 分页加载</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 闭包，为了私有化 index 变量</span>
<span class="token keyword">function</span> <span class="token function">generateDataWrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">generateData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> body <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
      div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
      index<span class="token operator">++</span>
      div<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;item&#39;</span><span class="token punctuation">)</span>
      body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> generateData <span class="token operator">=</span> <span class="token function">generateDataWrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> html <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement <span class="token comment">// html 元素的高度，即可视化区的高度 + 非可视化区的高度</span>
  <span class="token keyword">const</span> visibleHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight <span class="token comment">// 可视化区的高度</span>

  <span class="token comment">// 画图理解</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>html<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bottom <span class="token operator">-</span> <span class="token number">50</span> <span class="token operator">&lt;</span> visibleHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">generateData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">generateData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>`,4),r={href:"https://javascript.info/onscroll#endless-page",target:"_blank",rel:"noopener noreferrer"};function d(k,v){const s=i("ExternalLinkIcon");return t(),e("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[p("分页加载"),o(s)])])])])}const b=a(l,[["render",d],["__file","index.html.vue"]]);export{b as default};
