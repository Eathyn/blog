import{_ as a,W as r,X as o,Y as e,Z as d,$ as i,a0 as s,C as c}from"./framework-c8ebc670.js";const n={},h=s('<h1 id="computed-properties" tabindex="-1"><a class="header-anchor" href="#computed-properties" aria-hidden="true">#</a> Computed Properties</h1><h2 id="computed-caching-vs-methods" tabindex="-1"><a class="header-anchor" href="#computed-caching-vs-methods" aria-hidden="true">#</a> Computed Caching vs Methods</h2><ul><li>A computed property will only re-evaluate when some of its reactive dependencies have changed.</li></ul><h2 id="best-practices" tabindex="-1"><a class="header-anchor" href="#best-practices" aria-hidden="true">#</a> Best Practices</h2><h3 id="getters-should-be-side-effect-free" tabindex="-1"><a class="header-anchor" href="#getters-should-be-side-effect-free" aria-hidden="true">#</a> Getters should be side-effect free</h3><ul><li>We should only perform pure computation in getter function of <code>computed</code>.</li><li>Don&#39;t make async requests or mutate the DOM inside a <code>computed</code> getter.</li></ul><h3 id="avoid-mutating-computed-value" tabindex="-1"><a class="header-anchor" href="#avoid-mutating-computed-value" aria-hidden="true">#</a> Avoid mutating computed value</h3><ul><li>It&#39;s recommended to avoid mutating computed value.</li></ul><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>',9),l={href:"https://vuejs.org/guide/essentials/computed.html",target:"_blank",rel:"noopener noreferrer"};function u(m,p){const t=c("ExternalLinkIcon");return r(),o("div",null,[h,e("ul",null,[e("li",null,[e("a",l,[d("Computed Properties"),i(t)])])])])}const _=a(n,[["render",u],["__file","index.html.vue"]]);export{_ as default};
