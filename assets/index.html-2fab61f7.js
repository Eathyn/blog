import{_ as u,W as p,X as h,$ as n,a1 as s,Y as a,Z as e,a0 as i,C as t}from"./framework-0d71bc9d.js";const f="/blog/assets/concept-11b21d48.png",g="/blog/assets/force_cache_result_1-5328bbee.png",k="/blog/assets/force_cache_result_2-6d1bfde8.png",m="/blog/assets/concept-24faf844.png",b="/blog/assets/last_modified-89303b2a.png",_="/blog/assets/summary-58e14fda.png",x={},v=i('<h1 id="cache" tabindex="-1"><a class="header-anchor" href="#cache" aria-hidden="true">#</a> Cache</h1><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><ul><li>没有修改过的资源不需要重复向服务器获取，直接从缓存中获取可以更快地展示页面</li></ul><h2 id="强制缓存" tabindex="-1"><a class="header-anchor" href="#强制缓存" aria-hidden="true">#</a> 强制缓存</h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3><ul><li>强制缓存（Strong Cache）：服务器设置 <code>Cache-Control</code>，后续针对该请求，浏览器直接从缓存中获取数据，不需要通过服务器</li></ul><figure><img src="'+f+'" alt="force cache concept" height="320" tabindex="0" loading="lazy"><figcaption>force cache concept</figcaption></figure><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3>',8),C=a("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[a("pre",{class:"language-javascript"},[a("code",null,[a("span",{class:"token keyword"},"function"),e(),a("span",{class:"token function"},"fetchData"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),e(),a("span",{class:"token punctuation"},"{"),e(`
  `),a("span",{class:"token function"},"fetch"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'http://localhost:3000'"),a("span",{class:"token punctuation"},","),e(),a("span",{class:"token punctuation"},"{"),e(`
    `),a("span",{class:"token literal-property property"},"credentials"),a("span",{class:"token operator"},":"),e(),a("span",{class:"token string"},"'include'"),a("span",{class:"token punctuation"},","),e(`
  `),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token punctuation"},"}"),e(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),y=a("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[a("pre",{class:"language-javascript"},[a("code",null,[e("app"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"get"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},"'/'"),a("span",{class:"token punctuation"},","),e(),a("span",{class:"token punctuation"},"("),a("span",{class:"token parameter"},[e("req"),a("span",{class:"token punctuation"},","),e(" res")]),a("span",{class:"token punctuation"},")"),e(),a("span",{class:"token operator"},"=>"),e(),a("span",{class:"token punctuation"},"{"),e(`
  res`),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"set"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"{"),e(`
    `),a("span",{class:"token string-property property"},"'Cache-Control'"),a("span",{class:"token operator"},":"),e(),a("span",{class:"token string"},"'max-age=604800'"),a("span",{class:"token punctuation"},","),e(`
  `),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),e(`
  res`),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"end"),a("span",{class:"token punctuation"},"("),a("span",{class:"token constant"},"JSON"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"stringify"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"{"),e(`
    `),a("span",{class:"token literal-property property"},"a"),a("span",{class:"token operator"},":"),e(),a("span",{class:"token number"},"1"),a("span",{class:"token punctuation"},","),e(`
    `),a("span",{class:"token literal-property property"},"b"),a("span",{class:"token operator"},":"),e(),a("span",{class:"token number"},"2"),a("span",{class:"token punctuation"},","),e(`
  `),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},")"),e(`
`),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),e(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),M=i('<h3 id="结果" tabindex="-1"><a class="header-anchor" href="#结果" aria-hidden="true">#</a> 结果</h3><ul><li>第一次请求从服务器获取数据</li></ul><figure><img src="'+g+'" alt="force_cache_result_1.png" height="350" tabindex="0" loading="lazy"><figcaption>force_cache_result_1.png</figcaption></figure><ul><li>第二次请求开始从缓存获取数据</li></ul><figure><img src="'+k+'" alt="force_cache_result_2.png" height="350" tabindex="0" loading="lazy"><figcaption>force_cache_result_2.png</figcaption></figure><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3><ul><li>静态资源适合缓存，如图片</li><li>Cache-Control : max-age=xx -&gt; 在 xx 秒之内，数据从缓存里读取</li><li>Cache-Control : no-store -&gt; 数据从服务器读取</li><li>Cache-Control : no-cache -&gt; 数据没有改变就从缓存中读取，有改变则从服务器读取</li><li>Cache-Control : private -&gt; 数据只能缓存在用户的浏览器</li><li>Cache-Control : public -&gt; 数据可以缓存在浏览器和代理等中间设备</li></ul><h2 id="协商-对比缓存" tabindex="-1"><a class="header-anchor" href="#协商-对比缓存" aria-hidden="true">#</a> 协商/对比缓存</h2><h3 id="概念-1" tabindex="-1"><a class="header-anchor" href="#概念-1" aria-hidden="true">#</a> 概念</h3><ul><li>协商缓存（Negotiation Cache）：服务器判断浏览器缓存里的资源是否和服务器一致，若一致则返回 304，浏览器从缓存中获取资源；不一致则返回 200 和新资源</li></ul><figure><img src="'+m+'" alt="negotiation cache" height="350" tabindex="0" loading="lazy"><figcaption>negotiation cache</figcaption></figure><h3 id="过程" tabindex="-1"><a class="header-anchor" href="#过程" aria-hidden="true">#</a> 过程</h3><h4 id="last-modified-if-modified-since" tabindex="-1"><a class="header-anchor" href="#last-modified-if-modified-since" aria-hidden="true">#</a> Last-Modified / If-Modified-Since</h4><ul><li><code>Last-Modified</code> 和 <code>If-Modified-Since</code> 的值是表示时间的字符串</li></ul><ol><li>浏览器初次请求，服务器返回资源和 <code>Last-Modified</code>，浏览器把该资源缓存下来</li><li>浏览器再次请求时携带 <code>If-Modified-Since</code> 头部</li><li>服务器收到请求后对比 <code>Last-Modified</code> 和 <code>If-Modified-Since</code>，如果两者相同说明资源没有更新，返回 304 响应状态码，浏览器从缓存中获取资源；如果两者不同说明资源已更新，返回新资源和新 <code>Last-Modified</code></li></ol><figure><img src="'+b+'" alt="last-modified and if-modified-since" height="350" tabindex="0" loading="lazy"><figcaption>last-modified and if-modified-since</figcaption></figure><h4 id="etag-if-none-match" tabindex="-1"><a class="header-anchor" href="#etag-if-none-match" aria-hidden="true">#</a> Etag / If-None-Match</h4><ul><li><code>Etag</code> / <code>If-None-Match</code> 的值是表示资源特定版本的标识符</li><li>过程与 <code>Last-Modified</code> 和 <code>If-Modified-Since</code> 类似</li></ul><h3 id="注意-1" tabindex="-1"><a class="header-anchor" href="#注意-1" aria-hidden="true">#</a> 注意</h3><ul><li><code>Last-Modified</code> 没有 <code>Etag</code> 精准</li><li>优先选择 <code>Etag</code>，<code>Last-Modified</code> 作为备用方案</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><figure><img src="'+_+'" alt="summary" height="500" tabindex="0" loading="lazy"><figcaption>summary</figcaption></figure><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>',23),L={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control",target:"_blank",rel:"noopener noreferrer"};function I(S,N){const o=t("CodeTabs"),c=t("ExternalLinkIcon");return p(),h("div",null,[v,n(o,{id:"32",data:[{title:"前端"},{title:"后端"}]},{tab0:s(({title:l,value:r,isActive:d})=>[C]),tab1:s(({title:l,value:r,isActive:d})=>[y]),_:1}),M,a("ul",null,[a("li",null,[a("a",L,[e("no-store vs. no-cache"),n(c)])])])])}const E=u(x,[["render",I],["__file","index.html.vue"]]);export{E as default};
