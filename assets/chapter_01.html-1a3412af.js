import{_ as i,W as r,X as n,Y as e,Z as a,$ as o,a0 as l,C as s}from"./framework-0d71bc9d.js";const c={},h=l('<h1 id="from-javascript-to-typescript" tabindex="-1"><a class="header-anchor" href="#from-javascript-to-typescript" aria-hidden="true">#</a> From JavaScript to TypeScript</h1><h2 id="history-of-javascript" tabindex="-1"><a class="header-anchor" href="#history-of-javascript" aria-hidden="true">#</a> History of JavaScript</h2><ul><li>ECMAScript is the language specification that JavaScript is based on.</li></ul><h2 id="vanilla-javascript-s-pitfalls" tabindex="-1"><a class="header-anchor" href="#vanilla-javascript-s-pitfalls" aria-hidden="true">#</a> Vanilla JavaScript&#39;s Pitfalls</h2><ul><li>Developers often refer to using JavaScript without any significant language extensions or frameworks as &quot;vanilla&quot;.</li></ul><h3 id="costly-freedom" tabindex="-1"><a class="header-anchor" href="#costly-freedom" aria-hidden="true">#</a> Costly Freedom</h3><ul><li>JavaScript runs code without checking if it will likely crash first.</li></ul><h3 id="loose-documentation" tabindex="-1"><a class="header-anchor" href="#loose-documentation" aria-hidden="true">#</a> Loose Documentation</h3><ul><li>Nothing exists in the JavaScript language specification to formalize describing what function parameters, function returns, variables, or other constructs in code are meant to be.</li></ul><h2 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> TypeScript!</h2><ul><li>TypeScript was created internally at Microsoft in the early 2010s then released and open sourced in 2012.</li></ul><h2 id="getting-started-in-the-typescript" tabindex="-1"><a class="header-anchor" href="#getting-started-in-the-typescript" aria-hidden="true">#</a> Getting Started in the TypeScript</h2><h3 id="compiling-syntax" tabindex="-1"><a class="header-anchor" href="#compiling-syntax" aria-hidden="true">#</a> Compiling Syntax</h3>',13),d=e("li",null,"TypeScript compiler compiles TypeScript syntax to JavaScript syntax.",-1),p={href:"https://www.typescriptlang.org/play",target:"_blank",rel:"noopener noreferrer"},u=e("h2",{id:"getting-started-locally",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getting-started-locally","aria-hidden":"true"},"#"),a(" Getting Started Locally")],-1),f=e("ul",null,[e("li",null,[a("A "),e("em",null,"tsconfig.json"),a(" file declares the settings that TypeScript uses when analyzing your code.")]),e("li",null,"Even though there was a type error in our code, the syntax was still completely valid. The TypeScript compiler will still produce JavaScript from an input file regardless of any type errors.")],-1);function y(g,m){const t=s("ExternalLinkIcon");return r(),n("div",null,[h,e("ul",null,[d,e("li",null,[a("We can see compiled JavaScript code in "),e("a",p,[a("TypeScript playground"),o(t)]),a(".")])]),u,f])}const v=i(c,[["render",y],["__file","chapter_01.html.vue"]]);export{v as default};
