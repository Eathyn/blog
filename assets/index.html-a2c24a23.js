import{_ as r,W as u,X as k,Y as n,Z as s,$ as e,a1 as t,a0 as l,C as o}from"./framework-0d71bc9d.js";const m={},v=n("h1",{id:"manage-table",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#manage-table","aria-hidden":"true"},"#"),s(" Manage Table")],-1),b=n("h2",{id:"create-table",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#create-table","aria-hidden":"true"},"#"),s(" Create Table")],-1),E={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-create-table/",target:"_blank",rel:"noopener noreferrer"},w=l(`<div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> table_name <span class="token punctuation">(</span>
  column_name datatype<span class="token punctuation">(</span><span class="token keyword">length</span><span class="token punctuation">)</span> column_constraint<span class="token punctuation">,</span>
  column_name datatype<span class="token punctuation">(</span><span class="token keyword">length</span><span class="token punctuation">)</span> column_constraint<span class="token punctuation">,</span>
  table_constraints  
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="select-into" tabindex="-1"><a class="header-anchor" href="#select-into" aria-hidden="true">#</a> Select Into</h2>`,2),T={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-select-into/",target:"_blank",rel:"noopener noreferrer"},g=l(`<ul><li>将其他表中满足条件的数据行复制到新表中。</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">SELECT</span>
  select_list
<span class="token keyword">INTO</span> <span class="token punctuation">[</span>TEMPORARY | TEMP | UNLOGGED<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">TABLE</span><span class="token punctuation">]</span>
  new_table_name
<span class="token keyword">FROM</span>
  table_name
<span class="token keyword">WHERE</span>
  condition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="create-table-as" tabindex="-1"><a class="header-anchor" href="#create-table-as" aria-hidden="true">#</a> Create Table As</h2>`,3),h={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-create-table-as/",target:"_blank",rel:"noopener noreferrer"},_=l(`<ul><li>将其他表的查询结果作为新表的数据。</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> new_table_name <span class="token punctuation">(</span>renamed_column_list<span class="token punctuation">)</span>
<span class="token keyword">AS</span> query<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>CREATE TABLE AS</code> 和 <code>SELECT INTO</code> 的作用相同，优先选择 <code>CREATE TABLE AS</code>。</li></ul><h2 id="serial" tabindex="-1"><a class="header-anchor" href="#serial" aria-hidden="true">#</a> Serial</h2>`,4),y={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-serial/",target:"_blank",rel:"noopener noreferrer"},A=l(`<div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name<span class="token punctuation">(</span>
    column_name SERIAL
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>SERIAL</code> 的特点：</p><ul><li>从 1 开始自增</li><li>NOT NULL</li></ul></li><li><p><code>SERIAL</code> 类型的大小：</p><ul><li><code>SAMLLSERIAL</code>：2 字节</li><li><code>SERIAL</code>：4 字节</li><li><code>BIGSERIAL</code>：8 字节</li></ul></li><li><p>插入数据：</p><ul><li>不提供 <code>SERIAL</code> 的列名和数据</li><li>提供 <code>SERIAL</code> 的列名，使用 <code>DEFAULT</code> 代替具体的数据</li></ul></li></ul>`,2),q=n("div",{class:"language-plsql line-numbers-mode","data-ext":"plsql"},[n("pre",{class:"language-plsql"},[n("code",null,[n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" fruits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"name"),n("span",{class:"token punctuation"},")"),s(` 
`),n("span",{class:"token keyword"},"VALUES"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'apple'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("div",{class:"language-plsql line-numbers-mode","data-ext":"plsql"},[n("pre",{class:"language-plsql"},[n("code",null,[n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" fruits"),n("span",{class:"token punctuation"},"("),s("id"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"name"),n("span",{class:"token punctuation"},")"),s(` 
`),n("span",{class:"token keyword"},"VALUES"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"DEFAULT"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'apple'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("h2",{id:"sequence",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sequence","aria-hidden":"true"},"#"),s(" Sequence")],-1),N={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-sequences/",target:"_blank",rel:"noopener noreferrer"},S=l(`<ul><li>创建序列（sequence）：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">CREATE</span> <span class="token keyword">SEQUENCE</span> <span class="token punctuation">[</span> <span class="token keyword">IF</span> <span class="token keyword">NOT</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">]</span> sequence_name
    <span class="token punctuation">[</span> <span class="token keyword">AS</span> { SMALLINT | <span class="token keyword">INT</span> | BIGINT } <span class="token punctuation">]</span>
    <span class="token punctuation">[</span> INCREMENT <span class="token punctuation">[</span> <span class="token keyword">BY</span> <span class="token punctuation">]</span> increment <span class="token punctuation">]</span>
    <span class="token punctuation">[</span> MINVALUE minvalue | NO MINVALUE <span class="token punctuation">]</span> 
    <span class="token punctuation">[</span> MAXVALUE maxvalue | NO MAXVALUE <span class="token punctuation">]</span>
    <span class="token punctuation">[</span> <span class="token keyword">START</span> <span class="token punctuation">[</span> <span class="token keyword">WITH</span> <span class="token punctuation">]</span> <span class="token keyword">start</span> <span class="token punctuation">]</span> 
    <span class="token punctuation">[</span> CACHE cache <span class="token punctuation">]</span> 
    <span class="token punctuation">[</span> <span class="token punctuation">[</span> NO <span class="token punctuation">]</span> CYCLE <span class="token punctuation">]</span>
    <span class="token punctuation">[</span> OWNED <span class="token keyword">BY</span> { table_name<span class="token punctuation">.</span>column_name | NONE } <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除序列：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">DROP</span> <span class="token keyword">SEQUENCE</span> <span class="token punctuation">[</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">]</span> sequence_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>删除表或者列，会自动删除序列对象。</li></ul><h2 id="identity-column" tabindex="-1"><a class="header-anchor" href="#identity-column" aria-hidden="true">#</a> Identity Column</h2>`,6),C={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-identity-column/",target:"_blank",rel:"noopener noreferrer"},I=l(`<ul><li><p><code>GENERATED AS IDENTITY</code> / <code>GENERATED BY DEFAULT AS IDENTITY</code>：在插入数据行时，自动为改列赋值一个数字。</p></li><li><p><code>GENERATED AS IDENTITY</code> / <code>GENERATED BY DEFAULT AS IDENTITY</code> 使用了 Sequence 对象，所以可以指定 sequence option。</p></li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name <span class="token punctuation">(</span>
  column_name <span class="token keyword">type</span> GENERATED { ALWAYS | <span class="token keyword">BY</span> <span class="token keyword">DEFAULT</span> } <span class="token keyword">AS</span> IDENTITY
  <span class="token punctuation">[</span><span class="token punctuation">(</span>sequence_option<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>GENERATED ALWAYS</code> 和 <code>GENERATED BY DEFAULT AS IDENTITY</code> 的区别：</p><ul><li><code>GENERATED ALWAYS</code>：手动插入值会报错。</li><li><code>GENERATED BY DEFAULT AS IDENTITY</code>：手动插入值不会报错。</li></ul></li><li><p>添加标识列（标识列之前的类型必须为 <code>NOT NULL</code>）：</p></li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">ALTER</span> COLUMN column_name
<span class="token keyword">ADD</span> GENERATED { ALWAYS | <span class="token keyword">BY</span> <span class="token keyword">DEFAULT</span> } <span class="token keyword">AS</span> IDENTITY
<span class="token punctuation">[</span><span class="token punctuation">(</span>sequence_option<span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改标识列：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name 
<span class="token keyword">ALTER</span> COLUMN column_name 
{ <span class="token keyword">SET</span> GENERATED { ALWAYS| <span class="token keyword">BY</span> <span class="token keyword">DEFAULT</span> } | 
  <span class="token keyword">SET</span> sequence_option | RESTART <span class="token punctuation">[</span> <span class="token punctuation">[</span> <span class="token keyword">WITH</span> <span class="token punctuation">]</span> restart <span class="token punctuation">]</span> }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除 <code>GENERATED ALWAYS</code> / <code>GENERATED BY DEFAULT AS IDENTITY</code> 约束：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">ALTER</span> COLUMN column_name
<span class="token keyword">DROP</span> IDENTITY <span class="token punctuation">[</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="alter-table" tabindex="-1"><a class="header-anchor" href="#alter-table" aria-hidden="true">#</a> Alter Table</h2>`,9),D={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-alter-table/",target:"_blank",rel:"noopener noreferrer"},f=l(`<ul><li>设置或删除列的默认值：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name 
<span class="token keyword">ALTER</span> COLUMN column_name 
<span class="token punctuation">[</span><span class="token keyword">SET</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">value</span> | <span class="token keyword">DROP</span> <span class="token keyword">DEFAULT</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>设置或删除 <code>NOT NULL</code> 限制：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name 
<span class="token keyword">ALTER</span> COLUMN column_name 
<span class="token punctuation">[</span><span class="token keyword">SET</span> <span class="token keyword">NOT</span> <span class="token keyword">NULL</span>| <span class="token keyword">DROP</span> <span class="token keyword">NOT</span> <span class="token keyword">NULL</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加 <code>CHECK</code> 限制：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name 
<span class="token keyword">ADD</span> <span class="token keyword">CHECK</span> expression<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加限制：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name 
<span class="token keyword">ADD</span> CONSTRAINT constraint_name constraint_definition<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重命名表：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name 
<span class="token keyword">RENAME</span> <span class="token keyword">TO</span> new_table_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rename-table" tabindex="-1"><a class="header-anchor" href="#rename-table" aria-hidden="true">#</a> Rename Table</h2>`,11),x={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-rename-table/",target:"_blank",rel:"noopener noreferrer"},O=l(`<ul><li>重命名表名：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> table_name
<span class="token keyword">RENAME</span> <span class="token keyword">TO</span> new_table_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="add-column" tabindex="-1"><a class="header-anchor" href="#add-column" aria-hidden="true">#</a> Add Column</h2>`,3),U={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-add-column/",target:"_blank",rel:"noopener noreferrer"},B=l(`<ul><li>增加列：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">ADD</span> COLUMN new_column_name data_type constraint<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>新增加的列自动成为最后一列，无法指定在列中的顺序。</li></ul><h2 id="drop-column" tabindex="-1"><a class="header-anchor" href="#drop-column" aria-hidden="true">#</a> Drop Column</h2>`,4),Y={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-drop-column/",target:"_blank",rel:"noopener noreferrer"},M=l(`<ul><li><p>删除表的一列时，PostgreSQL 会自动删除与该列有关的索引和限制。</p></li><li><p>当删除被其他数据库对象（例如：view, trigger, stored procedure）使用的列时，需要使用 <code>CASCADE</code> 选项，这个选项会删除列和使用改列的对象。</p></li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name 
<span class="token keyword">DROP</span> COLUMN column_name <span class="token keyword">CASCADE</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除多列：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">DROP</span> COLUMN column_name1<span class="token punctuation">,</span>
<span class="token keyword">DROP</span> COLUMN column_name2<span class="token punctuation">,</span>
<span class="token operator">..</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="change-column-data-type" tabindex="-1"><a class="header-anchor" href="#change-column-data-type" aria-hidden="true">#</a> Change Column Data Type</h2>`,5),F={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-change-column-type/",target:"_blank",rel:"noopener noreferrer"},G=l(`<ul><li>修改列的数据类型：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">ALTER</span> COLUMN column_name <span class="token punctuation">[</span><span class="token keyword">SET</span> <span class="token keyword">DATA</span><span class="token punctuation">]</span> <span class="token keyword">TYPE</span> new_data_type<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果列的数据类型无法自动转换，则需要使用 <code>USING column_name::new_data_type</code>：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">ALTER</span> COLUMN column_name <span class="token keyword">TYPE</span> new_data_type
<span class="token keyword">USING</span> column_name<span class="token operator">:</span><span class="token operator">:</span>new_data_type
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rename-column" tabindex="-1"><a class="header-anchor" href="#rename-column" aria-hidden="true">#</a> Rename Column</h2>`,5),P={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-rename-column/",target:"_blank",rel:"noopener noreferrer"},W=l(`<ul><li>重命名列：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name 
<span class="token keyword">RENAME</span> COLUMN column_name
<span class="token keyword">TO</span> new_column_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重命名多列：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">RENAME</span> COLUMN column_name1 <span class="token keyword">TO</span> new_column_name1<span class="token punctuation">;</span>

<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name
<span class="token keyword">RENAME</span> COLUMN column_name2 <span class="token keyword">TO</span> new_column_name2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果列被其他对象所引用，那么重命名列之后 PostgreSQL 会自动重命名引用改列的列名。</li></ul><h2 id="drop-table" tabindex="-1"><a class="header-anchor" href="#drop-table" aria-hidden="true">#</a> Drop Table</h2>`,6),V={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-drop-table/",target:"_blank",rel:"noopener noreferrer"},X=l(`<ul><li>删除表：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> table_name 
<span class="token punctuation">[</span><span class="token keyword">CASCADE</span> | RESTRICT<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>CASCADE</code> 与 <code>RESTRICT</code>：</p><ul><li><code>CASCADE</code>：删除表与依赖该表的的对象。</li><li><code>RESTRICT</code>：如果有对象依赖该表，则拒绝删除该表和依赖的对象。<code>RESTRICT</code> 是默认选项。</li></ul></li><li><p>删除多个表：</p></li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> 
   table_name_1<span class="token punctuation">,</span>
   table_name_2<span class="token punctuation">,</span>
   <span class="token operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">[</span><span class="token keyword">CASCADE</span> | RESTRICT<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="truncate-table" tabindex="-1"><a class="header-anchor" href="#truncate-table" aria-hidden="true">#</a> Truncate Table</h2>`,5),H={href:"https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-truncate-table/",target:"_blank",rel:"noopener noreferrer"},Q=l(`<ul><li>删除表的所有数据：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code>TRUNCATE <span class="token keyword">TABLE</span> table_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>在删除表数据方面，<code>TRUNCATE</code> 比 <code>DELETE</code> 更高效，因为不需要扫描表。</p></li><li><p>删除表的所有数据，并重新开始标识。默认是 <code>CONTINUE IDENTITY</code>：</p></li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code>TRUNCATE <span class="token keyword">TABLE</span> table_name 
RESTART IDENTITY<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除多个表的数据：</li></ul><div class="language-plsql line-numbers-mode" data-ext="plsql"><pre class="language-plsql"><code>TRUNCATE <span class="token keyword">TABLE</span> 
    table_name1<span class="token punctuation">,</span> 
    table_name2<span class="token punctuation">,</span>
    <span class="token operator">..</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function K(Z,$){const a=o("ExternalLinkIcon"),p=o("CodeTabs");return u(),k("div",null,[v,b,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",E,[s("Create Table"),e(a)])])]),w,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",T,[s("Select Into"),e(a)])])]),g,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",h,[s("Create Table As"),e(a)])])]),_,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",y,[s("Serial"),e(a)])])]),A,e(p,{id:"118",data:[{title:"不提供列名"},{title:"提供列名"}]},{tab0:t(({title:c,value:i,isActive:d})=>[q]),tab1:t(({title:c,value:i,isActive:d})=>[L]),_:1}),R,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",N,[s("Sequence"),e(a)])])]),S,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",C,[s("Identity Column"),e(a)])])]),I,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",D,[s("Alter Table"),e(a)])])]),f,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",x,[s("Rename Table"),e(a)])])]),O,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",U,[s("Add Column"),e(a)])])]),B,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",Y,[s("Drop Column"),e(a)])])]),M,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",F,[s("Change Column Data Type"),e(a)])])]),G,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",P,[s("Rename Column"),e(a)])])]),W,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",V,[s("Drop Table"),e(a)])])]),X,n("blockquote",null,[n("p",null,[s("Reference: "),n("a",H,[s("Truncate Table"),e(a)])])]),Q])}const z=r(m,[["render",K],["__file","index.html.vue"]]);export{z as default};
