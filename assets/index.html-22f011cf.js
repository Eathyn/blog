import{_ as e,W as p,X as c,Y as n,Z as s,$ as t,a0 as o,C as l}from"./framework-0d71bc9d.js";const i={},u=o(`<h1 id="nexttick" tabindex="-1"><a class="header-anchor" href="#nexttick" aria-hidden="true">#</a> NextTick</h1><h2 id="vue-更新-dom-的策略" tabindex="-1"><a class="header-anchor" href="#vue-更新-dom-的策略" aria-hidden="true">#</a> Vue 更新 DOM 的策略</h2><p>一个响应式状态更新后，Vue 不会立即更新 DOM，而是会收集所有更改的响应式状态，并在虚拟 DOM 中更新它们。下一个事件循环开始后，Vue 才根据虚拟 DOM 更改实际 DOM。之所以这样做，是因为积累多个响应式状态更新后一次性修改 DOM 比每个响应式状态更新后立刻修改 DOM 所消耗的资源少。</p><h2 id="nexttick-的作用" tabindex="-1"><a class="header-anchor" href="#nexttick-的作用" aria-hidden="true">#</a> nextTick 的作用</h2><p>nextTick 可以让开发者捕获到 DOM 更新后的时刻，用于确保接下来的操作是在 DOM 完成更新的前提下执行的。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>increment<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>increment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>count: {{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> nextTick<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  count<span class="token punctuation">.</span>value<span class="token operator">++</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textContent<span class="token punctuation">)</span> <span class="token comment">// count: 0</span>
  <span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textContent<span class="token punctuation">)</span> <span class="token comment">// count: 1</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>`,8),r={href:"https://dmitripavlutin.com/vue-next-tick/",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"nextTick",-1),d={href:"https://vuejs.org/api/general.html#nexttick",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"nextTick",-1),m={href:"https://v2.vuejs.org/v2/guide/reactivity.html#Async-Update-Queue",target:"_blank",rel:"noopener noreferrer"};function h(g,f){const a=l("ExternalLinkIcon");return p(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[s("Blog: "),k,s(" API"),t(a)])]),n("li",null,[n("a",d,[s("Docs: "),v,s(" API"),t(a)])]),n("li",null,[n("a",m,[s("Async Update Queue"),t(a)])])])])}const x=e(i,[["render",h],["__file","index.html.vue"]]);export{x as default};
