import{_ as s,W as o,X as n,Y as e,Z as a,$ as r,a0 as i,C as c}from"./framework-c8ebc670.js";const d="/blog/assets/check_config-7fbe80ac.png",p="/blog/assets/check_config_2-7368a5d3.png",l="/blog/assets/pull_original_repo-a6f19657.png",g="/blog/assets/push-b0ed2e47.png",u="/blog/assets/no_upstream_warn-2d86d439.png",m="/blog/assets/set_upstream_branch-5e3811da.png",h="/blog/assets/fixed-b277c7c5.png",f={},_=e("h1",{id:"upstream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#upstream","aria-hidden":"true"},"#"),a(" Upstream")],-1),b=e("h2",{id:"为仓库设置-upstream",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#为仓库设置-upstream","aria-hidden":"true"},"#"),a(" 为仓库设置 upstream")],-1),x={href:"https://devopscube.com/set-git-upstream-respository-branch/",target:"_blank",rel:"noopener noreferrer"},v=i(`<h3 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h3><p>将 main repo 设置为 forked repo 的 upstream，就可以让 forked repo 与 main repo 保持同步。</p><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h3><ul><li>A: 原始 repo（别人的 repo）</li><li>B: fork A 得到的 repo（自己源端的仓库）</li><li>C: clone B 得到的 repo（自己本地的仓库）</li></ul><p>如果没有将 C 的 upstream 设置为 A，那么当 A 更新时，C 无法拉取 A 更新的内容。需要将 C 设置为 A 的 upstream。命令如下：</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git remote add upstream &lt;repo A&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>cat .git/config</code> 可以看到已经配置了 upstream。如图所示：</p><figure><img src="`+d+'" alt="配置了 upstream" tabindex="0" loading="lazy"><figcaption>配置了 upstream</figcaption></figure><p>也可以使用 <code>git remote -v</code> 查看 upstream 配置。如图所示：</p><figure><img src="'+p+'" alt="配置了 upstream" tabindex="0" loading="lazy"><figcaption>配置了 upstream</figcaption></figure><p>配置完 upstream 之后，就可以使用 <code>git pull upstream &lt;branch&gt;</code> 拉取 upstream repo 的分支的 commit 记录。如图所示：</p><figure><img src="'+l+'" alt="拉取 upstream 的分支" tabindex="0" loading="lazy"><figcaption>拉取 upstream 的分支</figcaption></figure><p>最后再把本地分支（A）push 到 forked repo（B）进行更新。如图所示：</p><figure><img src="'+g+'" alt="更新 forked repo" tabindex="0" loading="lazy"><figcaption>更新 forked repo</figcaption></figure><h2 id="为分支设置-upstream" tabindex="-1"><a class="header-anchor" href="#为分支设置-upstream" aria-hidden="true">#</a> 为分支设置 upstream</h2>',15),k={href:"https://devopscube.com/set-git-upstream-respository-branch/",target:"_blank",rel:"noopener noreferrer"},y=i('<h3 id="原因-1" tabindex="-1"><a class="header-anchor" href="#原因-1" aria-hidden="true">#</a> 原因</h3><p>在本地仓库新建分支 <code>test</code>，并使用 <code>git push origin test</code> 将 <code>test</code> 分支推送到远端仓库。如果远端仓库的 <code>test</code> 分支有新的 commit，那么使用 <code>git pull</code> 将无法将远端更新到本地。因为此时 Git 不知道要将哪个远端的分支合并到本地的 <code>test</code> 分支，即本地仓库的 <code>test</code> 分支没有设置 upstream。警告如下：</p><figure><img src="'+u+`" alt="没有设置 upstream 的警告" tabindex="0" loading="lazy"><figcaption>没有设置 upstream 的警告</figcaption></figure><h3 id="例子-1" tabindex="-1"><a class="header-anchor" href="#例子-1" aria-hidden="true">#</a> 例子</h3><p>根据 Git 的提示，指定要拉取的分支可以更新本地的分支。命令如下：</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git pull &lt;remote&gt; &lt;branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以为本地分支设置 upstream，命令如下：</p><div class="language-git line-numbers-mode" data-ext="git"><pre class="language-git"><code>git branch --set-upstream-to &lt;remote&gt;/&lt;branch&gt; &lt;local branch&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+m+'" alt="为某个本地分支设置 upstream" tabindex="0" loading="lazy"><figcaption>为某个本地分支设置 upstream</figcaption></figure><p>这时候再使用 <code>git pull</code> 就可以更新 <code>test</code> 分支了。如图所示：</p><figure><img src="'+h+'" alt="正常拉取" tabindex="0" loading="lazy"><figcaption>正常拉取</figcaption></figure><h2 id="refs" tabindex="-1"><a class="header-anchor" href="#refs" aria-hidden="true">#</a> Refs</h2>',12),A={href:"https://devopscube.com/set-git-upstream-respository-branch/",target:"_blank",rel:"noopener noreferrer"};function z(B,C){const t=c("ExternalLinkIcon");return o(),n("div",null,[_,b,e("blockquote",null,[e("p",null,[e("a",x,[a("blog"),r(t)])])]),v,e("blockquote",null,[e("p",null,[e("a",k,[a("blog"),r(t)])])]),y,e("ul",null,[e("li",null,[e("a",A,[a("Set Git Upstream Repository Branch"),r(t)])])])])}const V=s(f,[["render",z],["__file","index.html.vue"]]);export{V as default};
