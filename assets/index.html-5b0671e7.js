const t=JSON.parse('{"key":"v-87720b68","path":"/front_end/javascript/prototype/","title":"Prototype","lang":"zh-CN","frontmatter":{"description":"Prototype Basics 每一个引用类型（对象、数组、函数等）都有隐藏的 [[prototype]] 属性，该属性值为 null 或另一个对象的堆内存地址，这个对象被称为原型 (prototype) 通过 __proto__ 或 Object.getPrototypeOf / Object.setPrototypeOf 访问 当在一个对象上找不到属性时，就会沿着 [[prototype]] 到其他对象上寻找","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/front_end/javascript/prototype/"}],["meta",{"property":"og:title","content":"Prototype"}],["meta",{"property":"og:description","content":"Prototype Basics 每一个引用类型（对象、数组、函数等）都有隐藏的 [[prototype]] 属性，该属性值为 null 或另一个对象的堆内存地址，这个对象被称为原型 (prototype) 通过 __proto__ 或 Object.getPrototypeOf / Object.setPrototypeOf 访问 当在一个对象上找不到属性时，就会沿着 [[prototype]] 到其他对象上寻找"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://eathyn.github.io/blog/blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Prototype"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Prototype\\",\\"image\\":[\\"https://eathyn.github.io/blog/blog/\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Basics","slug":"basics","link":"#basics","children":[]},{"level":2,"title":"Constructor","slug":"constructor","link":"#constructor","children":[]},{"level":2,"title":"Inheritance","slug":"inheritance","link":"#inheritance","children":[]},{"level":2,"title":"Refs","slug":"refs","link":"#refs","children":[]}],"git":{},"readingTime":{"minutes":1.2,"words":361},"filePathRelative":"front_end/javascript/prototype/index.md","excerpt":"<h1> Prototype</h1>\\n<h2> Basics</h2>\\n<ul>\\n<li>\\n<p>每一个引用类型（对象、数组、函数等）都有隐藏的 <code>[[prototype]]</code> 属性，该属性值为 <code>null</code> 或另一个对象的堆内存地址，这个对象被称为原型 (prototype)</p>\\n</li>\\n<li>\\n<p>通过 <code>__proto__</code> 或 <code>Object.getPrototypeOf</code> / <code>Object.setPrototypeOf</code> 访问</p>\\n</li>\\n<li>\\n<p>当在一个对象上找不到属性时，就会沿着 <code>[[prototype]]</code> 到其他对象上寻找</p>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
