import{_ as e,W as a,X as _,a0 as i}from"./framework-0d71bc9d.js";const l={},r=i('<h1 id="第二章-框架设计的核心要素" tabindex="-1"><a class="header-anchor" href="#第二章-框架设计的核心要素" aria-hidden="true">#</a> 第二章 框架设计的核心要素</h1><h2 id="_2-2-控制框架代码的体积" tabindex="-1"><a class="header-anchor" href="#_2-2-控制框架代码的体积" aria-hidden="true">#</a> 2.2 控制框架代码的体积</h2><ul><li>Vue.js 使用 rollup.js 构建项目。</li><li><code>__DEV__</code> 常量用来判断是否处于开发环境，这个常量是通过 rollup.js 的插件配置来预定义的，类似于 webpack 的 DefinePlugin 插件。</li><li>当 <code>__DEV__</code> 为 true 时，Vue 打包输入 vue.global.js，这个输出文件包含很多警告信息。当 <code>__DEV__</code> 为 false 时，Vue 打包输入 vue.global.prod.js，这个输出文件会移除掉很多警告信息。这样可以让开发者在开发环境中获取更多警告信息，用户在生产环境加载包时速度更快。</li></ul><h2 id="_2-3-框架要做到良好的-tree-shaking" tabindex="-1"><a class="header-anchor" href="#_2-3-框架要做到良好的-tree-shaking" aria-hidden="true">#</a> 2.3 框架要做到良好的 Tree-Shaking</h2><ul><li>如果开发者没有用到一些 Vue 提供的特性（例如：Transition 组件），那么这部分 Vue 代码会通过 Tree-Shaking 在构建资源中移除。</li><li>使用 Tree-Shaking 的条件时模块必须为 ESM。</li><li>如果函数可能会产生副作用，那么 Tree-Shaking 不会把它移除。可以通过注释 <code>/*#__PURE__*/</code> 告诉 rollup.js 这个函数不会产生副作用。</li></ul><p>Skip: 2.4 - 2.7 感觉不太重要，先跳过</p>',6),o=[r];function n(c,d){return a(),_("div",null,o)}const t=e(l,[["render",n],["__file","02-框架设计的核心要素.html.vue"]]);export{t as default};
