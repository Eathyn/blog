const n=JSON.parse('{"key":"v-54740b38","path":"/cs/dsa/sorting_algorithm/shell_sort/","title":"Shell Sort","lang":"zh-CN","frontmatter":{"date":"2023-06-01T00:00:00.000Z","category":"DSA","tag":"sorting","description":"Shell Sort 原理 Reference: shell sort step-by-step guide 代码实现 当 gap 等于 1 时，shell sort 相当于 insertion sort。 function shellSort(arr) { let gap = Math.floor(arr.length / 2) while (gap &gt; 0) { for (let i = 0, end = i + gap; end &lt; arr.length; i++, end++) { if (arr[i] &gt; arr[end]) { [arr[i], arr[end]] = [arr[end], arr[i]] if (end % gap === 0) { // 比较当前值与距离前面 gap * i 的值 for (let j = i; j &gt; 0 &amp;&amp; j - gap &gt;= 0; j -= gap) { if (arr[j] &lt; arr[j - gap]) { [arr[j], arr[j - gap]] = [arr[j - gap], arr[j]] } else { // arr[j] 比 arr[j-gap] 大，则不需要比较更前面的值，因为 arr[j-gap] 比 arr[j-gap*2]、arr[j-gap*3] 大 break } } } } } gap = Math.floor(gap / 2) } }","head":[["meta",{"property":"og:url","content":"https://eathyn.github.io/blog/blog/cs/dsa/sorting_algorithm/shell_sort/"}],["meta",{"property":"og:title","content":"Shell Sort"}],["meta",{"property":"og:description","content":"Shell Sort 原理 Reference: shell sort step-by-step guide 代码实现 当 gap 等于 1 时，shell sort 相当于 insertion sort。 function shellSort(arr) { let gap = Math.floor(arr.length / 2) while (gap &gt; 0) { for (let i = 0, end = i + gap; end &lt; arr.length; i++, end++) { if (arr[i] &gt; arr[end]) { [arr[i], arr[end]] = [arr[end], arr[i]] if (end % gap === 0) { // 比较当前值与距离前面 gap * i 的值 for (let j = i; j &gt; 0 &amp;&amp; j - gap &gt;= 0; j -= gap) { if (arr[j] &lt; arr[j - gap]) { [arr[j], arr[j - gap]] = [arr[j - gap], arr[j]] } else { // arr[j] 比 arr[j-gap] 大，则不需要比较更前面的值，因为 arr[j-gap] 比 arr[j-gap*2]、arr[j-gap*3] 大 break } } } } } gap = Math.floor(gap / 2) } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"sorting"}],["meta",{"property":"article:published_time","content":"2023-06-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Shell Sort\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"时间复杂度","slug":"时间复杂度","link":"#时间复杂度","children":[{"level":3,"title":"最坏的情况","slug":"最坏的情况","link":"#最坏的情况","children":[]},{"level":3,"title":"最好的情况","slug":"最好的情况","link":"#最好的情况","children":[]}]}],"git":{},"readingTime":{"minutes":0.73,"words":220},"filePathRelative":"cs/dsa/sorting_algorithm/shell_sort/index.md","localizedDate":"2023年6月1日","excerpt":"<h1> Shell Sort</h1>\\n<h2> 原理</h2>\\n<blockquote>\\n<p>Reference: <a href=\\"https://youtu.be/SCBf7aqKQEY\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">shell sort step-by-step guide</a></p>\\n</blockquote>\\n<h2> 代码实现</h2>\\n<ul>\\n<li>当 gap 等于 1 时，shell sort 相当于 insertion sort。</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">shellSort</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> gap <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>gap <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> end <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">+</span> gap<span class=\\"token punctuation\\">;</span> end <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">,</span> end<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> arr<span class=\\"token punctuation\\">[</span>end<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token punctuation\\">[</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">[</span>end<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>arr<span class=\\"token punctuation\\">[</span>end<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>end <span class=\\"token operator\\">%</span> gap <span class=\\"token operator\\">===</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token comment\\">// 比较当前值与距离前面 gap * i 的值</span>\\n          <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> i<span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">&amp;&amp;</span> j <span class=\\"token operator\\">-</span> gap <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">-=</span> gap<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">-</span> gap<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n              <span class=\\"token punctuation\\">[</span>arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">-</span> gap<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">-</span> gap<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span>\\n            <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n              <span class=\\"token comment\\">// arr[j] 比 arr[j-gap] 大，则不需要比较更前面的值，因为 arr[j-gap] 比 arr[j-gap*2]、arr[j-gap*3] 大</span>\\n              <span class=\\"token keyword\\">break</span>\\n            <span class=\\"token punctuation\\">}</span>\\n          <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    gap <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>gap <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
